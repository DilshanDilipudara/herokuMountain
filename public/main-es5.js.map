{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/rep.service.ts","webpack:///src/app/_services/suppler.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/addshop/addshop.component.ts","webpack:///src/app/addshop/addshop.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/artical-category/artical-category.component.ts","webpack:///src/app/artical-category/artical-category.component.html","webpack:///src/app/artical/artical.component.ts","webpack:///src/app/artical/artical.component.html","webpack:///src/app/expences-type/expences-type.component.ts","webpack:///src/app/expences-type/expences-type.component.html","webpack:///src/app/expences/expences.component.ts","webpack:///src/app/expences/expences.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/manager-home/manager-home.component.ts","webpack:///src/app/manager-home/manager-home.component.html","webpack:///src/app/metrics/metrics.component.ts","webpack:///src/app/metrics/metrics.component.html","webpack:///src/app/nav-bar-rep/nav-bar-rep.component.ts","webpack:///src/app/nav-bar-rep/nav-bar-rep.component.html","webpack:///src/app/product/product.component.ts","webpack:///src/app/product/product.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/rep-home/rep-home.component.ts","webpack:///src/app/rep-home/rep-home.component.html","webpack:///src/app/rep-orders/rep-orders.component.ts","webpack:///src/app/rep-orders/rep-orders.component.html","webpack:///src/app/sales-day-static/sales-day-static.component.ts","webpack:///src/app/sales-day-static/sales-day-static.component.html","webpack:///src/app/sales-month-static/sales-month-static.component.ts","webpack:///src/app/sales-month-static/sales-month-static.component.html","webpack:///src/app/stock-warehouse/stock-warehouse.component.ts","webpack:///src/app/stock-warehouse/stock-warehouse.component.html","webpack:///src/app/suppler-invoice/suppler-invoice.component.ts","webpack:///src/app/suppler-invoice/suppler-invoice.component.html","webpack:///src/app/suppler/suppler.component.ts","webpack:///src/app/suppler/suppler.component.html","webpack:///src/app/transport-expence-type/transport-expence-type.component.ts","webpack:///src/app/transport-expence-type/transport-expence-type.component.html","webpack:///src/app/transport-expence/transport-expence.component.ts","webpack:///src/app/transport-expence/transport-expence.component.html","webpack:///src/app/user-active/user-active.component.ts","webpack:///src/app/user-active/user-active.component.html","webpack:///src/app/vehicle/vehicle.component.ts","webpack:///src/app/vehicle/vehicle.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","providedIn","JwtInterceptor","request","next","token","clone","setHeaders","Authorization","handle","AuthenticationService","http","apiUri","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","pipe","user","setItem","stringify","removeItem","value","RepService","get","shop","order","SupplerService","apiUrl","metrics","del","data","console","log","artical","add","UserService","_id","AddshopComponent","formBuilder","repservice","multipleImages","routeReuseStrategy","shouldReuseRoute","mySubscription","events","subscribe","event","navigated","unsubscribe","addShopForm","group","shopName","required","ownerName","address","city","mobile","business","target","files","length","file","push","formData","FormData","img","append","res","err","registerShop","onMultipleSubmit","reset","navigateByUrl","addShop","selectImage","selectImage1","selector","templateUrl","styleUrls","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","multi","withConfig","warnOnNgModelWithFormControl","declarations","providers","bootstrap","ArticalCategoryComponent","supplerService","_flashMessagesService","buying","selling","updatebuying","updateSelling","LoadMetrics","viewArticalCategory","validator","updateValidator","submitted","articalCategoryform","categoryName","metricsName","comment","Boolean","myMetrics","invalid","AddArticalCategory","show","cssClass","timeout","resetForm","myArtical","articalobj","_deleteID","ArticalID","onArticalCategoryDelete","delArtical","_ActiveID","onArticalCategoryActive","closebutton","nativeElement","click","updateArticalCategoryform","updateArticalCategoryname","updatemetricsName","updatecomment","unbind","bind","closeModel","UpdateArticalCategory","controls","onUpdate","ArticalComponent","suppler","LoadArticalCategory","viewArtical","articalform","articalName","metricsID","volume","buyPrice","Number","sellPrice","minSalQty","val","addArticalobj","AddArtical","ArticalDelete","ArticalActive","updatearticalform","updatecategoryName","updatearticalName","updatevolume","updatebuyPrice","updatesellPrice","updateminSalQty","UpdateArtical","ExpencesTypeComponent","view","expences","ExpencesType","viewExpenceType","exprencedata","adddata","AddExpenceType","DeleteExpenceType","ActiveExpenceType","updateexpences","updateExpencesType","UpdateExpenceType","ExpencesComponent","LoadExpenceType","date","Date","cost","description","expenceTypedata","viewExpence","AddExpence","DeleteExpence","ActiveExpence","updateExpences","updateDate","updateCost","updateDescription","updateComment","UpdateExpence","LoginComponent","loginForm","minLength","login","f","status","role","error","onSubmit","ManagerHomeComponent","MetricsComponent","viewMetrics","metricsform","viewAllMetrics","Measure","AddMetrics","onDelete","delMetrics","onActive","updatemetricsform","updatemetricsname","mersure","onUpdateMetrics","NavBarRepComponent","logout","onLogout","ProductComponent","productfrom","productName","viewProduct","obj","addobj","AddProduct","ProductDelete","ProductActive","updateproductform","updateproductname","productModalName","UpdateProduct","RegisterComponent","userService","registerForm","fname","lname","maxLength","email","nic","registerUser","RepHomeComponent","supplerservice","quantity","items","itemNo","billTotal","markedCash","markedCheque","markedCredit","viewShops","getProductItems","checked","productItems","name","i","Item","SellUnitPrice","itemName","itemPrice","getPrice","totalPrice","price","calculateBill","item","splice","details","cashAmount","chequeAmount","creditAmount","addOrder","allShops","shops","toggleVisibilityCash","toggleVisibilityCheque","toggleVisibilityCredit","RepOrdersComponent","SalesDayStaticComponent","LoadArtical","salesDayStatics","fromDate","toDate","articalCategory","articalCategoryData","articalData","findData","todate","find","SalesMonthStaticComponent","month","StockWarehouseComponent","SupplerInvoiceComponent","updateselling","LoadSuppler","SupplerInvoice","articalCategoryname","articalname","supplername","orderNumber","invoiceNumber","viewSupplerInvoice","_add","AddSupplerInvoice","DeleteSupplerInvoice","_activeID","ActiveSupplerInvoice","updateSupplerInvoice","updatearticalCategoryname","updatearticalname","updatesupplername","updateorderNumber","updateinvoiceNumber","updatetotalPrice","updatequantity","UpdateSupplerInvoice","SupplerComponent","loadProduct","ProductLoad","product","supplerform","productname","street","telephone","regNo","viewSuppler","AddSuppler","DeleteSuppler","ActiveSuppler","updatesupplerform","updatename","updatestreet","updatecity","updatetelephone","updatemobile","updateemail","updateregNo","updatedetails","UpdateSuppler","TransportExpenceTypeComponent","transportExpences","TransportExpencesType","viewTransportExpenceType","AddTransportExpenceType","DeleteTransportExpenceType","ActiveTransportExpenceType","updateTransportExpences","updateTransportExpencesType","UpdateTransportExpenceType","TransportExpenceComponent","LoadvehicalType","vehical","Loadvehical","vahicaldata","viewtransportExpence","AddtransportExpence","DeletetransportExpence","ActivetransportExpence","updateVehical","UpdatetransportExpence","UserActiveComponent","viewUser","DeleteUser","ActiveUser","accept","AcceptUser","nonaccept","NonAcceptUser","VehicleComponent","vehicle","vehicleCategory","vehicleNumber","viewvehical","vehicledata","Addvehical","Deletevehical","Activevehical","updateVehicle","updateVehicleCategory","updateVehicleNumber","Updatevehical","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n     \r\n        if (currentUser ) {\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization:`${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\ninterface User{\r\n  token:String;\r\n  data:String;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  apiUri='https://mountaintea.herokuapp.com';\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n}\r\n\r\n\r\nlogin(username: string, password: string) {\r\n    return this.http.post<any>(`${this.apiUri}/users/authenticate`, { username, password })\r\n        .pipe(tap(user => {\r\n            // login successful if there's a jwt token in the response\r\n            if (user && user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n            }\r\n        }));\r\n}\r\n\r\nlogout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepService {\r\n\r\n  apiUri='https://mountaintea.herokuapp.com';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  allShops(){\r\n    return this.http.get(`${this.apiUri}/shops/all`);\r\n  }\r\n  \r\n  registerShop(shop){\r\n    return this.http.post(`${this.apiUri}/shops/add`,shop);\r\n  }\r\n\r\n  addOrder(order){\r\n    return this.http.post(`${this.apiUri}/orders/add`,order);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders} from '@angular/common/http' \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupplerService {\r\n\r\n  apiUrl = 'https://mountaintea.herokuapp.com';\r\n  \r\n  constructor(private http:HttpClient) { }\r\n\r\n  //view Metrics\r\n  viewAllMetrics(){\r\n    return this.http.get(`${this.apiUrl}/metrics/view`);\r\n  }\r\n  //Add Metrics\r\n   AddMetrics( metrics){\r\n      return this.http.post(`${this.apiUrl}/metrics/addmetrics`,metrics);\r\n   }\r\n   //Delete Metrics\r\n   onDelete(del){\r\n     return this.http.post(`${this.apiUrl}/metrics/onDelete`,del);\r\n   }\r\n   //Active Metrics\r\n   onActive(del){\r\n    return this.http.post(`${this.apiUrl}/metrics/onActive`,del);\r\n   }\r\n   //LoadMetrics\r\n   LoadMetrics(){\r\n     return this.http.get(`${this.apiUrl}/metrics/load`);\r\n   }\r\n   //update Metrics\r\n   onUpdateMetrics(data){\r\n     console.log(data);\r\n    return this.http.post(`${this.apiUrl}/metrics/onUpdate`,data);\r\n   }\r\n\r\n\r\n   //Add Artical\r\n   AddArticalCategory(artical){\r\n     return this.http.post(`${this.apiUrl}/ArticalCategory/add`,artical)\r\n   }\r\n   // view artical category\r\n   viewArticalCategory(){\r\n    return this.http.get(`${this.apiUrl}/ArticalCategory/view`)\r\n   }\r\n   //Delete artical category\r\n   onArticalCategoryDelete(del){\r\n    return this.http.post(`${this.apiUrl}/ArticalCategory/onDelete`,del);\r\n   }\r\n   //Active Artical\r\n   onArticalCategoryActive(del){\r\n    return this.http.post(`${this.apiUrl}/ArticalCategory/onActive`,del);\r\n   }\r\n  //Load Artical Category\r\n   LoadArticalCategory(){\r\n     return this.http.get(`${this.apiUrl}/ArticalCategory/load`);\r\n   }\r\n  //update Artical Category\r\n  UpdateArticalCategory(data){\r\n  return this.http.post(`${this.apiUrl}/ArticalCategory/onUpdate`,data);\r\n  }\r\n\r\n\r\n   //add artical\r\n   AddArtical(add){\r\n     return this.http.post(`${this.apiUrl}/Artical/add`,add);\r\n   }\r\n   // view artical \r\n   viewArtical(){\r\n    return this.http.get(`${this.apiUrl}/Artical/view`)\r\n   }\r\n   //Delete artical \r\n   ArticalDelete(del){\r\n    return this.http.post(`${this.apiUrl}/Artical/onDelete`,del);\r\n   }\r\n   //Active Artical\r\n   ArticalActive(del){\r\n    return this.http.post(`${this.apiUrl}/Artical/onActive`,del);\r\n   }\r\n   //Load Artical \r\n   LoadArtical(){\r\n    return this.http.get(`${this.apiUrl}/Artical/load`);\r\n  }\r\n   //update Artical\r\n   UpdateArtical(data){\r\n    return this.http.post(`${this.apiUrl}/Artical/onUpdate`,data);\r\n    }\r\n\r\n\r\n  //view Product \r\n  viewProduct(){\r\n    return this.http.get(`${this.apiUrl}/Product/view`)\r\n  }\r\n  //add Product\r\n  AddProduct(add){\r\n    return this.http.post(`${this.apiUrl}/Product/add`,add);\r\n  }\r\n  //Delete Product \r\n  ProductDelete(del){\r\n      return this.http.post(`${this.apiUrl}/Product/onDelete`,del);\r\n  }\r\n  //Active Product\r\n  ProductActive(del){\r\n    return this.http.post(`${this.apiUrl}/Product/onActive`,del);\r\n  }\r\n  //Load Product \r\n  ProductLoad(){\r\n    return this.http.get(`${this.apiUrl}/Product/load`);\r\n  }\r\n  //update Product\r\n  UpdateProduct(data){\r\n    return this.http.post(`${this.apiUrl}/Product/onUpdate`,data);\r\n    }\r\n  \r\n\r\n  //view Suppler \r\n  viewSuppler(){\r\n    return this.http.get(`${this.apiUrl}/Suppler/view`)\r\n  }\r\n  //add Suppler\r\n  AddSuppler(add){\r\n    return this.http.post(`${this.apiUrl}/Suppler/add`,add);\r\n  }\r\n  //Delete Suppler \r\n  DeleteSuppler(del){\r\n      return this.http.post(`${this.apiUrl}/Suppler/onDelete`,del);\r\n  }\r\n  //Active Suppler\r\n  ActiveSuppler(del){\r\n    return this.http.post(`${this.apiUrl}/Suppler/onActive`,del);\r\n  }\r\n  //Load Suppler \r\n  LoadSuppler(){\r\n    return this.http.get(`${this.apiUrl}/Suppler/load`);\r\n  }\r\n   //update Suppler\r\n   UpdateSuppler(data){\r\n    return this.http.post(`${this.apiUrl}/Suppler/onUpdate`,data);\r\n    }\r\n  \r\n  \r\n\r\n  //view SupplerInvoice \r\n  viewSupplerInvoice(){\r\n    return this.http.get(`${this.apiUrl}/SupplerInvoice/view`)\r\n  }\r\n  //add SupplerInvoice\r\n  AddSupplerInvoice(add){\r\n    return this.http.post(`${this.apiUrl}/SupplerInvoice/add`,add);\r\n  }\r\n  //Delete SupplerInvoice \r\n  DeleteSupplerInvoice(del){\r\n      return this.http.post(`${this.apiUrl}/SupplerInvoice/onDelete`,del);\r\n  }\r\n  //Active SupplerInvoice\r\n  ActiveSupplerInvoice(del){\r\n    return this.http.post(`${this.apiUrl}/SupplerInvoice/onActive`,del);\r\n  }\r\n  //Load SupplerInvoice \r\n  LoadSupplerInvoice(){\r\n    return this.http.get(`${this.apiUrl}/SupplerInvoice/load`);\r\n  }\r\n   //update SupplerInvoice\r\n   UpdateSupplerInvoice(data){\r\n    return this.http.post(`${this.apiUrl}/SupplerInvoice/onUpdate`,data);\r\n    }\r\n\r\n  //view ExpenceType \r\n  viewExpenceType(){\r\n    return this.http.get(`${this.apiUrl}/ExpenceType/view`)\r\n  }\r\n  //add ExpenceType\r\n  AddExpenceType(add){\r\n    return this.http.post(`${this.apiUrl}/ExpenceType/add`,add);\r\n  }\r\n  //Delete ExpenceType \r\n  DeleteExpenceType(del){\r\n      return this.http.post(`${this.apiUrl}/ExpenceType/onDelete`,del);\r\n  }\r\n  //Active ExpenceType\r\n  ActiveExpenceType(del){\r\n    return this.http.post(`${this.apiUrl}/ExpenceType/onActive`,del);\r\n  }\r\n  //Load ExpenceType \r\n  LoadExpenceType(){\r\n    return this.http.get(`${this.apiUrl}/ExpenceType/load`);\r\n  }\r\n  //update ExpenceType\r\n  UpdateExpenceType(data){\r\n    return this.http.post(`${this.apiUrl}/ExpenceType/onUpdate`,data);\r\n    }\r\n  \r\n\r\n  //view Expence \r\n  viewExpence(){\r\n    return this.http.get(`${this.apiUrl}/Expence/view`)\r\n  }\r\n  //add Expence\r\n  AddExpence(add){\r\n    return this.http.post(`${this.apiUrl}/Expence/add`,add);\r\n  }\r\n  //Delete Expence \r\n  DeleteExpence(del){\r\n      return this.http.post(`${this.apiUrl}/Expence/onDelete`,del);\r\n  }\r\n  //Active Expence\r\n  ActiveExpence(del){\r\n    return this.http.post(`${this.apiUrl}/Expence/onActive`,del);\r\n  }\r\n  //Load Expence \r\n  LoadExpence(){\r\n    return this.http.get(`${this.apiUrl}/Expence/load`);\r\n  }\r\n  //update Expence\r\n  UpdateExpence(data){\r\n    return this.http.post(`${this.apiUrl}/Expence/onUpdate`,data);\r\n   }\r\n  \r\n  //view TransportExpenceType \r\n  viewTransportExpenceType(){\r\n    return this.http.get(`${this.apiUrl}/TransportExpenceType/view`)\r\n  }\r\n  //add TransportExpenceType\r\n  AddTransportExpenceType(add){\r\n    return this.http.post(`${this.apiUrl}/TransportExpenceType/add`,add);\r\n  }\r\n  //Delete TransportExpenceType \r\n  DeleteTransportExpenceType(del){\r\n      return this.http.post(`${this.apiUrl}/TransportExpenceType/onDelete`,del);\r\n  }\r\n  //Active TransportExpenceType\r\n  ActiveTransportExpenceType(del){\r\n    return this.http.post(`${this.apiUrl}/TransportExpenceType/onActive`,del);\r\n  }\r\n  //Load TransportExpenceType \r\n  LoadTransportExpenceType(){\r\n    return this.http.get(`${this.apiUrl}/TransportExpenceType/load`);\r\n  }\r\n  //update TransportExpenceType\r\n  UpdateTransportExpenceType(data){\r\n    return this.http.post(`${this.apiUrl}/TransportExpenceType/onUpdate`,data);\r\n  }\r\n    \r\n  //view vehical \r\n  viewvehical(){\r\n    return this.http.get(`${this.apiUrl}/vehical/view`)\r\n  }\r\n  //add vehical\r\n  Addvehical(add){\r\n    return this.http.post(`${this.apiUrl}/vehical/add`,add);\r\n  }\r\n  //Delete vehical \r\n  Deletevehical(del){\r\n      return this.http.post(`${this.apiUrl}/vehical/onDelete`,del);\r\n  }\r\n  //Active vehical\r\n  Activevehical(del){\r\n    return this.http.post(`${this.apiUrl}/vehical/onActive`,del);\r\n  }\r\n  //Load vehical \r\n  Loadvehical(){\r\n    return this.http.get(`${this.apiUrl}/vehical/load`);\r\n  }\r\n  //update vehical\r\n  Updatevehical(data){\r\n    return this.http.post(`${this.apiUrl}/vehical/onUpdate`,data);\r\n   }\r\n    \r\n  \r\n    \r\n  //view transportExpence \r\n  viewtransportExpence(){\r\n    return this.http.get(`${this.apiUrl}/transportExpence/view`)\r\n  }\r\n  //add transportExpence\r\n  AddtransportExpence(add){\r\n    return this.http.post(`${this.apiUrl}/transportExpence/add`,add);\r\n  }\r\n  //Delete transportExpence \r\n  DeletetransportExpence(del){\r\n      return this.http.post(`${this.apiUrl}/transportExpence/onDelete`,del);\r\n  }\r\n  //Active transportExpence\r\n  ActivetransportExpence(del){\r\n    return this.http.post(`${this.apiUrl}/transportExpence/onActive`,del);\r\n  }\r\n  //Load transportExpence \r\n  LoadtransportExpence(){\r\n    return this.http.get(`${this.apiUrl}/transportExpence/load`);\r\n  }\r\n  //update transportExpence\r\n  UpdatetransportExpence(data){\r\n    return this.http.post(`${this.apiUrl}/transportExpence/onUpdate`,data);\r\n    }\r\n      \r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  apiUri='https://mountaintea.herokuapp.com';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user){\r\n    return this.http.post(`${this.apiUri}/users/register`,user);\r\n  }\r\n  registerEvent(){\r\n  }\r\n  \r\n  viewUser(){\r\n    return this.http.get(`${this.apiUri}/users/view`);\r\n  }\r\n  DeleteUser(_id){\r\n    return this.http.post(`${this.apiUri}/users/onDelete`,_id);\r\n  }\r\n  ActiveUser(_id){\r\n    return this.http.post(`${this.apiUri}/users/onActive`,_id);\r\n  }\r\n  AcceptUser(_id){\r\n    return this.http.post(`${this.apiUri}/users/onAccept`,_id);\r\n  }\r\n  NonAcceptUser(_id){\r\n    return this.http.post(`${this.apiUri}/users/onNonAccept`,_id);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Router, NavigationEnd } from \"@angular/router\";\r\n\r\nimport { RepService } from \"../_services/rep.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: \"app-addshop\",\r\n  templateUrl: \"./addshop.component.html\",\r\n  styleUrls: [\"./addshop.component.scss\"],\r\n})\r\nexport class AddshopComponent implements OnInit {\r\n  addShopForm: FormGroup;\r\n  images: any;\r\n  multipleImages = [];\r\n  mySubscription: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private repservice: RepService\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n    this.mySubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Trick the Router into believing it's last link wasn't previously loaded\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.mySubscription) {\r\n      this.mySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addShopForm = this.formBuilder.group({\r\n      shopName: [\"\", Validators.required],\r\n      ownerName: [\"\", Validators.required],\r\n      address: [\"\", Validators.required],\r\n      city: [\"\", Validators.required],\r\n      mobile: [\"\", Validators.required],\r\n      business: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  selectImage(event) {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.multipleImages.push(file);\r\n    }\r\n  }\r\n\r\n  selectImage1(event) {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.multipleImages.push(file);\r\n    }\r\n  }\r\n\r\n  onMultipleSubmit() {\r\n    const formData = new FormData();\r\n    for (let img of this.multipleImages) {\r\n      formData.append(\"files\", img);\r\n    }\r\n\r\n    this.http.post<any>(\"http://localhost:3000/shops/file\", formData).subscribe(\r\n      (res) => console.log(res),\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n  addShop() {\r\n    this.repservice.registerShop(this.addShopForm.value).subscribe(\r\n      (data) => {\r\n        this.onMultipleSubmit();\r\n        console.log(data);\r\n        this.addShopForm.reset();\r\n        this.router.navigateByUrl(\"/addShop\");\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<div class=\"container\">\r\n     <div>\r\n          <h3 class=\"mb-5 text-center\" style=\"margin-top: 70px;\" >Add Shop Details</h3>\r\n          <form [formGroup]=\"addShopForm\" (ngSubmit)=\"addShop()\">\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Shop Name</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"shopName\">\r\n                    </div>\r\n               </div>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Owner Full Name</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"ownerName\">\r\n                    </div>\r\n               </div>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Address</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"address\">\r\n                    </div>\r\n               </div>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">City</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"city\">\r\n                    </div>\r\n               </div>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Telephone Mobile</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"mobile\">\r\n                    </div>\r\n               </div>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Telephone Business</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"business\">\r\n                    </div>\r\n               </div>\r\n               <fieldset class=\"form-group\">\r\n                    <div class=\"row\">\r\n                         <legend class=\"col-form-label col-sm-2 pt-0\">Payment Type</legend>\r\n                         <div class=\"col-sm-10\">\r\n                              <div class=\"form-check\">\r\n                                   <input class=\"form-check-input\" type=\"checkbox\" name=\"gridRadios\" id=\"gridRadios1\"\r\n                                        value=\"option1\">\r\n                                   <label class=\"form-check-label\" for=\"gridRadios1\">\r\n                                        Cash Payment Allow\r\n                                   </label>\r\n                              </div>\r\n                              <div class=\"form-check\">\r\n                                   <input class=\"form-check-input\" type=\"checkbox\" name=\"gridRadios\" id=\"gridRadios2\"\r\n                                        value=\"option2\">\r\n                                   <label class=\"form-check-label\" for=\"gridRadios2\">\r\n                                        Cheque Payment Allow\r\n                                   </label>\r\n                              </div>\r\n                              <div class=\"form-check disabled\">\r\n                                   <input class=\"form-check-input\" type=\"checkbox\" name=\"gridRadios\" id=\"gridRadios3\"\r\n                                        value=\"option3\">\r\n                                   <label class=\"form-check-label\" for=\"gridRadios3\">\r\n                                        Credit Payment Allow\r\n                                   </label>\r\n                              </div>\r\n                         </div>\r\n                    </div>\r\n               </fieldset>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Owner Photo</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"file\" class=\"form-control-file\" id=\"exampleFormControlFile\" (change)=\"selectImage($event)\">\r\n                    </div>\r\n                    <!-- <div class=\"text-center mt-3 mb-5\">\r\n                         <button class=\"btn btn-primary\" (click)=\"fileUpload()\">\r\n                              Upload</button>\r\n                    </div> -->\r\n               </div>\r\n               <div class=\"form-group row\">\r\n                    <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Shop Photo</label>\r\n                    <div class=\"col-sm-10\">\r\n                         <input type=\"file\" class=\"form-control-file\" id=\"exampleFormControlFile1\" (change)=\"selectImage1($event)\">\r\n                    </div>\r\n               </div>\r\n               <div class=\"text-center mt-3 mb-5\">\r\n                    <button type=\"text\" class=\"btn btn-primary\" >\r\n                         Submit</button>\r\n               </div>\r\n          </form>\r\n     </div>\r\n</div>\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RepHomeComponent } from './rep-home/rep-home.component';\r\nimport { ManagerHomeComponent } from './manager-home/manager-home.component';\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\n\r\nimport { ArticalCategoryComponent } from './artical-category/artical-category.component';\r\nimport { MetricsComponent } from './metrics/metrics.component';\r\nimport { ArticalComponent } from './artical/artical.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { SupplerComponent } from './suppler/suppler.component';\r\nimport {  StockWarehouseComponent } from './stock-warehouse/stock-warehouse.component';\r\nimport { SupplerInvoiceComponent } from './suppler-invoice/suppler-invoice.component';\r\nimport { AddshopComponent } from './addshop/addshop.component';\r\nimport { RepOrdersComponent } from './rep-orders/rep-orders.component';\r\nimport { UserActiveComponent} from './user-active/user-active.component';\r\nimport {  ExpencesComponent } from './expences/expences.component';\r\nimport {  ExpencesTypeComponent } from './expences-type/expences-type.component';\r\nimport { TransportExpenceTypeComponent } from './transport-expence-type/transport-expence-type.component';\r\nimport { TransportExpenceComponent } from './transport-expence/transport-expence.component';\r\nimport { VehicleComponent } from './vehicle/vehicle.component';\r\nimport { SalesDayStaticComponent } from './sales-day-static/sales-day-static.component' ;\r\nimport { SalesMonthStaticComponent } from './sales-month-static/sales-month-static.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'rep-home',\r\n    component: RepHomeComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'manager-home',\r\n    component: ManagerHomeComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'artical-category',\r\n    component:ArticalCategoryComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'artical',\r\n    component:ArticalComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'metrics',\r\n    component:MetricsComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'product',\r\n    component:ProductComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'suppler',\r\n    component:SupplerComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'supplerInvoice',\r\n    component:SupplerInvoiceComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'activeUser',\r\n    component:UserActiveComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'Expences',\r\n    component:ExpencesComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'ExpencesType',\r\n    component:ExpencesTypeComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'TransportExpencesType',\r\n    component:TransportExpenceTypeComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'vehicle',\r\n    component:VehicleComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'TransportExpences',\r\n    component:TransportExpenceComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'stockWarehouse',\r\n    component:StockWarehouseComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'salesdaystatic',\r\n    component:SalesDayStaticComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'salesmonthstatic',\r\n    component:SalesMonthStaticComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'addshop',\r\n    component:AddshopComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },\r\n  {\r\n    path:'rep-orders',\r\n    component: RepOrdersComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  { path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"./app.component.scss\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <div class=\"approot\" >\r\n    <router-outlet></router-outlet> \r\n  </div>\r\n</body>\r\n</html>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ArticalCategoryComponent } from './artical-category/artical-category.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\n\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { RepHomeComponent } from './rep-home/rep-home.component';\r\nimport { ManagerHomeComponent } from './manager-home/manager-home.component';\r\nimport { MetricsComponent } from './metrics/metrics.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArticalComponent } from './artical/artical.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { SupplerComponent } from './suppler/suppler.component';\r\nimport { StockWarehouseComponent } from './stock-warehouse/stock-warehouse.component';\r\n \r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\n\r\nimport { SupplerInvoiceComponent } from './suppler-invoice/suppler-invoice.component';\r\nimport { AddshopComponent } from './addshop/addshop.component';\r\nimport { NavBarRepComponent } from './nav-bar-rep/nav-bar-rep.component';\r\nimport { RepOrdersComponent } from './rep-orders/rep-orders.component';\r\nimport { UserActiveComponent } from './user-active/user-active.component'\r\nimport { ExpencesComponent } from './expences/expences.component';\r\nimport { ExpencesTypeComponent } from './expences-type/expences-type.component';\r\nimport { TransportExpenceTypeComponent } from './transport-expence-type/transport-expence-type.component';\r\nimport { TransportExpenceComponent } from './transport-expence/transport-expence.component';\r\nimport { VehicleComponent } from './vehicle/vehicle.component';\r\nimport { SalesDayStaticComponent } from './sales-day-static/sales-day-static.component';\r\nimport { SalesMonthStaticComponent } from './sales-month-static/sales-month-static.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ArticalCategoryComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    RepHomeComponent,\r\n    ManagerHomeComponent,\r\n    MetricsComponent,\r\n    ArticalComponent,\r\n    ProductComponent,\r\n    SupplerComponent,\r\n    StockWarehouseComponent,\r\n    SupplerInvoiceComponent,\r\n    AddshopComponent,\r\n    NavBarRepComponent,\r\n    RepOrdersComponent,\r\n    UserActiveComponent,\r\n    ExpencesComponent,\r\n    ExpencesTypeComponent,\r\n    TransportExpenceTypeComponent,\r\n    TransportExpenceComponent,\r\n    VehicleComponent,\r\n    SalesDayStaticComponent,\r\n    SalesMonthStaticComponent,\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    CommonModule,\r\n    FlashMessagesModule.forRoot(),\r\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\r\n\r\n  ],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-artical-category',\r\n  templateUrl: './artical-category.component.html',\r\n  styleUrls: ['./artical-category.component.scss']\r\n})\r\nexport class ArticalCategoryComponent implements OnInit {\r\n\r\n  articalCategoryform:FormGroup;\r\n  updateArticalCategoryform:FormGroup;\r\n  submitted:boolean;\r\n  categoryName:any;\r\n  metrics:any;\r\n  metricsID:any;\r\n  metricsName:any;\r\n  buying:boolean;\r\n  selling:boolean;\r\n  comment:any;\r\n  articalobj:any;\r\n  updatemetricsID:any;\r\n  updatemetricsName:any;\r\n  updatebuying:boolean;\r\n  updateArticalCategoryname:any;\r\n  productModalName:any;\r\n  updatecomment:any;\r\n  _id:any;\r\n  updateSelling:boolean;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n\r\n  constructor( public supplerService:SupplerService,\r\n    private formBuilder: FormBuilder,\r\n    private _flashMessagesService: FlashMessagesService) { }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.buying = false;\r\n    this.selling = false;\r\n    this.updatebuying = false;\r\n    this.updateSelling = false;\r\n    this.LoadMetrics();\r\n    this.viewArticalCategory();\r\n    this.validator();\r\n    this.updateValidator();\r\n  }\r\n\r\n   //get value from\r\n   get f(){\r\n    return this.articalCategoryform.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.articalCategoryform.reset();\r\n  }\r\n\r\n\r\n\r\n  //validator\r\n  validator(){\r\n  this.articalCategoryform = this.formBuilder.group({\r\n    categoryName:[\"\",Validators.required],\r\n    metricsName:[\"\",Validators.required],\r\n    comment:[\"\"],\r\n    buying:[Boolean],\r\n    selling:[Boolean],\r\n  });\r\n}\r\n\r\n //loadMetrics\r\n  LoadMetrics(){\r\n    this.supplerService.LoadMetrics().subscribe(\r\n      (myMetrics)=>{\r\n        this.metrics = myMetrics[\"data\"];\r\n        console.log(myMetrics);\r\n \r\n      }\r\n    );\r\n  }\r\n\r\n//add Artical Category\r\n  AddArticalCategory(){\r\n\r\n    this.submitted = true;\r\n    if (this.articalCategoryform.invalid) {\r\n      return;\r\n       }\r\n   \r\n    const artical = {\r\n      categoryName:this.categoryName,\r\n      metricsName:this.metricsName,\r\n      buying:this.buying,\r\n      selling:this.selling,\r\n      comment:this.comment\r\n    } \r\n   \r\n     this.supplerService.AddArticalCategory(artical).subscribe(\r\n        (artical)=>{\r\n          if(artical['status']){\r\n            this._flashMessagesService.show(artical['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n           }\r\n          else{\r\n            this._flashMessagesService.show(artical['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n           }\r\n           \r\n          this.resetForm();\r\n           this.viewArticalCategory();       \r\n        },\r\n        (err)=>{\r\n         console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n   //View Artical Category\r\n   viewArticalCategory(){\r\n\r\n    this.supplerService.viewArticalCategory().subscribe(\r\n      (myArtical)=>{\r\n          this.articalobj = myArtical[\"data\"];\r\n          console.log(this.articalobj);\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n//Artical Delete\r\nonDelete(_deleteID){\r\n  var del = { ArticalID:_deleteID}\r\n   \r\n  this.supplerService.onArticalCategoryDelete(del).subscribe(\r\n    (delArtical)=>{\r\n      console.log(delArtical);\r\n      this._flashMessagesService.show(delArtical['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n      this.viewArticalCategory();\r\n    }\r\n  );\r\n}\r\n// delete Artical again active\r\nonActive(_ActiveID){\r\n  var del = { ArticalID:_ActiveID}\r\n   \r\n  this.supplerService.onArticalCategoryActive(del).subscribe(\r\n    (delArtical)=>{\r\n      console.log(delArtical);\r\n      this._flashMessagesService.show(delArtical['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n      this.viewArticalCategory();\r\n    }\r\n  );\r\n}\r\n\r\n\r\n//get value from\r\nget up(){\r\n  return this.updateArticalCategoryform.controls;\r\n}\r\n \r\ncloseModel(){\r\n  this.submitted = false;\r\n  this.closebutton.nativeElement.click();\r\n}\r\n //update validator\r\n updateValidator(){\r\n  this.updateArticalCategoryform = this.formBuilder.group({\r\n    updateArticalCategoryname:[\"\",Validators.required],\r\n    updatemetricsName:[\"\",Validators.required],\r\n    updatebuying:[Boolean],\r\n    updateSelling:[Boolean],\r\n    updatecomment:[\"\"]\r\n  });\r\n}\r\n\r\n\r\n  //data bound to value\r\n  bind(){\r\n    this.updateArticalCategoryname = this.categoryName;\r\n    this.updatemetricsName = this.metricsName;\r\n    this.updatebuying = this.buying;\r\n    this.updateSelling = this.selling;\r\n    this.updatecomment = this.comment;\r\n    this.unbind();\r\n  }\r\n\r\n  unbind(){\r\n     this.categoryName = null;\r\n     this.metricsName = null;\r\n     this.buying = null;\r\n     this.selling = null;\r\n     this.comment = null;\r\n  }\r\n//set  update model\r\nUpdate(data){\r\n   this.categoryName = data['categoryName'];\r\n   this.metricsName = data['metricsName']\r\n   this._id = data['_id'];\r\n   this.buying = data['buying'];\r\n   this.selling = data['selling'];\r\n   this.comment = data['comment'];\r\n   this.bind();\r\n}\r\n\r\n// modal to data service\r\nonUpdate(){\r\n\r\n  this.submitted = true;\r\n  if (this.updateArticalCategoryform.invalid) {\r\n    return;\r\n     }\r\n\r\n  const data = {\r\n    _id:this._id,\r\n    categoryName:this.updateArticalCategoryname,\r\n    metricsName:this.updatemetricsName,\r\n    buying:this.updatebuying,\r\n    selling:this.updateSelling,\r\n    comment:this.updatecomment\r\n \r\n  }\r\n\r\n   this.closeModel();\r\n  this.supplerService.UpdateArticalCategory(data).subscribe(\r\n    (res)=>{\r\n      if(res['status']){\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n       }\r\n      else{\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n       }\r\n       \r\n       this.resetForm();\r\n       this.viewArticalCategory(); \r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n}\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\">Artical Category</h2>\r\n<br><br>\r\n\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"articalCategoryform\" (submit)=\"AddArticalCategory()\">\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Artical Category Name</label>       \r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"BOPF\" formControlName=\"categoryName\" name =\"categoryName\" [(ngModel)] = \"categoryName\" [ngClass]=\"{ 'is-invalid': submitted && f.categoryName.errors }\" >\r\n                <div *ngIf=\"submitted && f.categoryName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.categoryName.errors.required\">Artical Category Name  is required</div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Metrics</label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"metricsName\" name=\"metricsName\"  formControlName=\"metricsName\"  [ngClass]=\"{ 'is-invalid': submitted && f.metricsName.errors }\">\r\n                    <option *ngFor=\"let data of metrics\" [value] =\"data.Measure\">{{data.Measure}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.metricsName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.metricsName.errors.required\">Metrics is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"form-check tab-space\">\r\n                <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"buying\" name=\"buying\"  formControlName=\"buying\" >\r\n                <label class=\"form-check-lable\" >Buying</label>   \r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-3 form-check tab-space\">\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"selling\" name=\"selling\"  formControlName=\"selling\" >\r\n                <label class=\"form-check-lable\">Selling</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\">Category Details</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea name=\"\" class=\"form-control\" id=\"\"  rows=\"3\" [(ngModel)]=\"comment\" name=\"comment\"  formControlName=\"comment\" ></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n        <flash-messages></flash-messages>\r\n    </form>\r\n    <br><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Artical Category Name</th>\r\n            <th scope=\"col\">Metrics</th>\r\n            <th scope=\"col\">Buying</th>\r\n            <th scope=\"col\">Selling</th>\r\n            <th scope=\"col\">comment</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of articalobj;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.categoryName}} </td>\r\n            <td >{{data.metricsName}}</td>\r\n            <td>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"data.buying\" name=\"buying\" >\r\n            </td>      \r\n            <td>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"data.selling\" name=\"selling\" >\r\n            </td>\r\n            <td>{{data.comment}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Artical Category Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updateArticalCategoryform\">\r\n            <div class=\"form-group\" >\r\n              <label for=\"name\" class=\"col-form-label\"> Artical Category Name</label>\r\n              <input type=\"text\" class=\"form-control\"  value=\"{{categoryName}}\" name=\"updateArticalCategoryname\" [(ngModel)]=\"updateArticalCategoryname\"  formControlName=\"updateArticalCategoryname\" [ngClass]=\"{ 'is-invalid': submitted && up.updateArticalCategoryname.errors }\">\r\n              <div *ngIf=\"submitted && up.updateArticalCategoryname.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updateArticalCategoryname.errors.required\">Artical Category Name  is required</div>\r\n               </div>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Metrics </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{metricsName}}\" name=\"updatemetricsName\" [(ngModel)]=\"updatemetricsName\"  formControlName=\"updatemetricsName\" [ngClass]=\"{ 'is-invalid': submitted && up.updatemetricsName.errors }\">\r\n                    <option *ngFor=\"let data of metrics\" [value] =\"data.Measure\">{{data.Measure}}</option>\r\n                </select>\r\n              <div *ngIf=\"submitted && up.updatemetricsName.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatemetricsName.errors.required\">Metric is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <div class=\"form-check tab-space\">\r\n                    <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"updatebuying\" [checked]=\"buying\" name=\"updatebuying\"  formControlName=\"updatebuying\" >\r\n                    <label class=\"form-check-lable\" >Buying</label>   \r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <div class=\"form-check tab-space\">\r\n                    <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"updateSelling\" [checked]=\"selling\" name=\"updateSelling\"  formControlName=\"updateSelling\" >\r\n                    <label class=\"form-check-lable\" >Selling</label>   \r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Category Details </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{comment}}\" name=\"updatecomment\" [(ngModel)]=\"updatecomment\"  formControlName=\"updatecomment\" ></textarea>\r\n                 \r\n             \r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport {  SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-artical',\r\n  templateUrl: './artical.component.html',\r\n  styleUrls: ['./artical.component.scss']\r\n})\r\nexport class ArticalComponent implements OnInit {\r\n\r\n  articalform:FormGroup;\r\n  submitted:boolean;\r\n  artical:any;\r\n  articalName:any;\r\n  metricsID:any;\r\n  metricsName:any;\r\n  volume:any;\r\n  buyPrice:any;\r\n  sellPrice:any;\r\n  minSalQty:any;\r\n  comment:any;\r\n  buying:any;\r\n  selling:any;\r\n  articalobj:any;\r\n  categoryName:any;\r\n  _id:any;\r\n  metrics:any;\r\n  updatearticalform:FormGroup;\r\n  updatecategoryName:any;\r\n  updatearticalName:any;\r\n  updatemetricsID:any;\r\n  updatemetricsName:any;\r\n  updatevolume:any;\r\n  updatebuyPrice:any;\r\n  updatesellPrice:any;\r\n  updateminSalQty:any;\r\n  updatecomment:any;\r\n  updateSelling:boolean;\r\n  updatebuying:boolean;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n\r\n  constructor( public suppler:SupplerService,\r\n    private formBuilder: FormBuilder,\r\n    private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buying = false;\r\n    this.selling = false;\r\n    this.updateSelling = false;\r\n    this.updateSelling = false;\r\n    this.LoadArticalCategory();\r\n    this.validator();\r\n    this.viewArtical();\r\n    this.updateValidator();\r\n    this.LoadMetrics();\r\n  }\r\n\r\n   //get value from\r\n   get f(){\r\n    return this.articalform.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.articalform.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.articalform = this.formBuilder.group({\r\n    categoryName:[\"\",Validators.required],\r\n    articalName:[\"\",Validators.required],\r\n    metricsID:[\"\"],\r\n    metricsName:[\"\",Validators.required],\r\n    volume:[\"\",Validators.required],\r\n    buyPrice:[Number,Validators.required],\r\n    sellPrice:[Number,Validators.required],\r\n    minSalQty:[Number,Validators.required],\r\n    comment:[\"\"],\r\n    buying:[Boolean],\r\n    selling:[Boolean],\r\n  });\r\n}\r\n\r\n  //load Artical category\r\n  LoadArticalCategory(){\r\n    this.suppler.LoadArticalCategory().subscribe(\r\n      (myArtical)=>{\r\n        console.log(myArtical);\r\n      this.artical = myArtical[\"data\"];\r\n      }\r\n    );\r\n  }\r\n\r\n  //loadMetrics\r\n  LoadMetrics(){\r\n    this.suppler.LoadMetrics().subscribe(\r\n      (myMetrics)=>{\r\n        this.metrics = myMetrics[\"data\"];\r\n       // console.log(myMetrics);\r\n \r\n      }\r\n    );\r\n  }\r\n\r\n  metricsChange(val){\r\n    console.log(val);\r\n    \r\n  }\r\n\r\n\r\n  //add Artical \r\n  add(){\r\n\r\n    \r\n    this.submitted = true;\r\n    if (this.articalform.invalid) {\r\n           return;\r\n       }\r\n\r\n\r\n    const addArticalobj = {\r\n      categoryName:this.categoryName,\r\n      articalName:this.articalName,\r\n      metricsID:this.metricsID,\r\n      metricsName:this.metricsName,\r\n      volume:this.volume,\r\n      buyPrice:this.buyPrice,\r\n      sellPrice:this.sellPrice,\r\n      minSalQty:this.minSalQty,\r\n      comment:this.comment,\r\n      buying:this.buying,\r\n      selling:this.selling\r\n    }\r\n    console.log(addArticalobj);\r\n    \r\n    this.suppler.AddArtical(addArticalobj).subscribe(\r\n      (myArtical)=>{\r\n        if(myArtical['status']){\r\n          this._flashMessagesService.show(myArtical['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(myArtical['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.viewArtical();     \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n\r\n   //View Artical \r\n   viewArtical(){\r\n\r\n    this.suppler.viewArtical().subscribe(\r\n      (myArtical)=>{\r\n          this.articalobj = myArtical[\"data\"];\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n//Artical Delete\r\nonDelete(_deleteID){\r\n  var del = { ArticalID:_deleteID}\r\n   \r\n  this.suppler.ArticalDelete(del).subscribe(\r\n    (delArtical)=>{\r\n      console.log(delArtical);\r\n      this._flashMessagesService.show(delArtical['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n      this.viewArtical();\r\n    }\r\n  );\r\n}\r\n// delete Artical again active\r\nonActive(_ActiveID){\r\n  var del = { ArticalID:_ActiveID}\r\n   \r\n  this.suppler.ArticalActive(del).subscribe(\r\n    (delArtical)=>{\r\n      console.log(delArtical);\r\n      this._flashMessagesService.show(delArtical['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n      this.viewArtical();\r\n    }\r\n  );\r\n}\r\n\r\n\r\n//get value from\r\nget up(){\r\n  return this.updatearticalform.controls;\r\n}\r\n \r\ncloseModel(){\r\n  this.submitted = false;\r\n  this.closebutton.nativeElement.click();\r\n}\r\n //update validator\r\n updateValidator(){\r\n  this.updatearticalform = this.formBuilder.group({\r\n    updatecategoryName:[\"\",Validators.required],\r\n    updatemetricsName:[\"\",Validators.required],\r\n    updatearticalName:[\"\",Validators.required],\r\n    updatevolume:[\"\",Validators.required],\r\n    updatebuyPrice:[Number,Validators.required],\r\n    updatesellPrice:[Number,Validators.required],\r\n    updateminSalQty:[Number,Validators.required],\r\n    updatebuying:[Boolean],\r\n    updateSelling:[Boolean],\r\n    updatecomment:[\"\"]\r\n  });\r\n}\r\n\r\n  //data bound to value\r\n  bind(){\r\n    this.updatecategoryName = this.categoryName;\r\n    this.updatearticalName = this.articalName;\r\n    this.updatemetricsName = this.metricsName;\r\n    this.updatevolume = this.volume;\r\n    this.updatebuyPrice = this.buyPrice;\r\n    this.updatesellPrice = this.sellPrice;\r\n    this.updateminSalQty = this.minSalQty;\r\n    this.updatebuying = this.buying;\r\n    this.updateSelling = this.selling;\r\n    this.updatecomment = this.comment;\r\n    this.unbind();\r\n  }\r\n\r\n  unbind(){\r\n    this.categoryName = null;\r\n    this.articalName = null;\r\n    this.metricsName = null;\r\n    this.volume = null;\r\n    this.buyPrice = null;\r\n    this.sellPrice = null;\r\n    this.minSalQty = null;\r\n    this.buying = null;\r\n    this.selling = null;\r\n    this.comment = null;\r\n  }\r\n  \r\n//set  update model\r\nUpdate(data){\r\n   this._id         = data['_id'];\r\n   this.categoryName  = data['categoryName'];\r\n   this.articalName = data['articalName'];\r\n   this.metricsName = data[\"metricsName\"]\r\n   this.volume      = data['volume'];\r\n   this.buyPrice    = data['buyPrice'];\r\n   this.sellPrice   = data['sellPrice'];\r\n   this.minSalQty   = data['minSalQty'];\r\n   this.buying      = data['buying'];\r\n   this.selling     = data['selling'];\r\n   this.comment     = data['comment'];\r\n   this.bind();\r\n}\r\n\r\n// modal to data service\r\nonUpdate(){\r\n\r\n\r\n  this.submitted = true;\r\n  if (this.updatearticalform.invalid) {\r\n        return;\r\n     }\r\n     \r\n  const data = {\r\n    _id       :this._id,\r\n    categoryName:this.updatecategoryName,\r\n    articalName:this.updatearticalName,\r\n    metricsName :this.updatemetricsName,\r\n    volume    :this.updatevolume,\r\n    minSalQty :this.updateminSalQty,\r\n    buyPrice  :this.updatebuyPrice,\r\n    sellPrice :this.updatesellPrice,\r\n    buying    :this.updatebuying,\r\n    selling   :this.updateSelling,\r\n    comment   :this.updatecomment,\r\n \r\n  }\r\n \r\n   this.closeModel();\r\n  this.suppler.UpdateArtical(data).subscribe(\r\n    (res)=>{\r\n      if(res['status']){\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n       }\r\n      else{\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n       }\r\n       \r\n       this.resetForm();\r\n       this.viewArtical(); \r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Artical</h2>\r\n<br><br>\r\n\r\n<div class=\"container\">\r\n    <form action=\"\"  [formGroup] = \"articalform\" (submit)=\"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Artical category</label>\r\n            <div class=\"col-sm-6\" >\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)] = \"categoryName\" name = \"categoryName\" formControlName=\"categoryName\" [ngClass]=\"{ 'is-invalid': submitted && f.categoryName.errors }\" >\r\n                    <option *ngFor=\"let data of artical\" [value] = \"data.categoryName\"  >{{data.categoryName }}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.categoryName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.categoryName.errors.required\">Artical Category is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n              <select type=\"text\" class=\"form-control\" placeholder=\"Ex : g\" name =\"metricsName\" value=\"\" [(ngModel)] = \"metricsName\" formControlName=\"metricsName\" [ngClass]=\"{ 'is-invalid': submitted && f.metricsName.errors }\">\r\n                <option *ngFor=\"let data of artical\" [value] = \"data.metricsName\"  >{{data.metricsName }}</option>\r\n              </select>\r\n              <div *ngIf=\"submitted && f.metricsName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.metricsName.errors.required\">Metrics is required</div>\r\n            </div>\r\n              </div>  \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Artical  Name</label>       \r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Tea Packet\" name =\"articalName\" [(ngModel)] = \"articalName\" formControlName=\"articalName\" [ngClass]=\"{ 'is-invalid': submitted && f.articalName.errors }\" >\r\n            </div>\r\n            <div *ngIf=\"submitted && f.articalName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.articalName.errors.required\">Artical  Name is required</div>\r\n            </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Volume</label>       \r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : 50\" name =\"volume\" [(ngModel)] = \"volume\" formControlName=\"volume\" [ngClass]=\"{ 'is-invalid': submitted && f.volume.errors }\">\r\n                <div *ngIf=\"submitted && f.volume.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.volume.errors.required\">Volume is required</div>\r\n                </div>\r\n            </div>\r\n              \r\n         </div>\r\n         <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Buy Price</label>       \r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 500\" name =\"buyPrice\" [(ngModel)] = \"buyPrice\" min=\"0\" formControlName=\"buyPrice\" [ngClass]=\"{ 'is-invalid': submitted && f.buyPrice.errors }\">\r\n                <div *ngIf=\"submitted && f.buyPrice.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.buyPrice.errors.required\">Buy Price is required</div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Sell Price</label>       \r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 600\" name =\"sellPrice\" [(ngModel)] = \"sellPrice\" min=\"0\" formControlName=\"sellPrice\" [ngClass]=\"{ 'is-invalid': submitted && f.sellPrice.errors }\">\r\n                <div *ngIf=\"submitted && f.sellPrice.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.sellPrice.errors.required\">Sell Price is required</div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\"> Min Sale Qty </label>       \r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 10\" name =\"minSalQty\" [(ngModel)] = \"minSalQty\" min=\"0\" formControlName=\"minSalQty\" [ngClass]=\"{ 'is-invalid': submitted && f.minSalQty.errors }\">\r\n                <div *ngIf=\"submitted && f.minSalQty.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.minSalQty.errors.required\"> Min Sale Qtyis required</div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n            <label class = \"col-sm-3 col-form-lable\">Comment</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea name=\"\" class=\"form-control\" id=\"\"  rows=\"3\" [(ngModel)]=\"comment\" name=\"comment\" formControlName=\"comment\"></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"form-check tab-space\">\r\n                <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"buying\" name=\"buying\" formControlName=\"buying\">\r\n                <label class=\"form-check-lable\" >Buying</label>   \r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-3 form-check tab-space\">\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"selling\" name=\"selling\" formControlName=\"selling\" >\r\n                <label class=\"form-check-lable\">Selling</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br>\r\n    <flash-messages></flash-messages>\r\n    <br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Artical Category</th>\r\n            <th scope=\"col\">Artical Name</th>\r\n            <th scope=\"col\">Volume</th>\r\n            <th scope=\"col\">metrics</th>\r\n            <th scope=\"col\">Buy Price</th>\r\n            <th scope=\"col\">Sell Price</th>\r\n            <th scope=\"col\">Min Sell Qty</th>\r\n            <th scope=\"col\">comment</th>\r\n            <th scope=\"col\">Buying</th>\r\n            <th scope=\"col\">Selling</th>      \r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of articalobj;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.categoryName}}</td>\r\n            <td>{{data.articalName}}</td>\r\n            <td>{{data.volume}}</td>\r\n            <td>{{data.metricsName}}</td>\r\n            <td>{{data.buyPrice}}</td>\r\n            <td>{{data.sellPrice}}</td>\r\n            <td>{{data.minSalQty}}</td>\r\n            <td>{{data.comment}}</td>\r\n            <td>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"data.buying\" name=\"buying\" >\r\n            </td>      \r\n            <td>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"data.selling\" name=\"selling\" >\r\n            </td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Artical  Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updatearticalform\">\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Artical Category Name </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{categoryName}}\" name=\"updatecategoryName\" [(ngModel)]=\"updatecategoryName\"  formControlName=\"updatecategoryName\" [ngClass]=\"{ 'is-invalid': submitted && up.updatecategoryName.errors }\">\r\n                    <option *ngFor=\"let data of artical\" [value] =\"data.categoryName\">{{data.categoryName}}</option>\r\n                </select>\r\n                 <div *ngIf=\"submitted && up.updatecategoryName.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatecategoryName.errors.required\">Artical Category Name is required</div>\r\n                 </div>\r\n              </div>\r\n            <div class=\"form-group\" >\r\n              <label for=\"name\" class=\"col-form-label\"> Artical Name</label>\r\n              <input type=\"text\" class=\"form-control\"  value=\"{{articalName}}\" name=\"updatearticalName\" [(ngModel)]=\"updatearticalName\"  formControlName=\"updatearticalName\" [ngClass]=\"{ 'is-invalid': submitted && up.updatearticalName.errors }\">\r\n              <div *ngIf=\"submitted && up.updatearticalName.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updatearticalName.errors.required\">Artical  Name  is required</div>\r\n               </div>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Metrics </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{metricsName}}\" name=\"updatemetricsName\" [(ngModel)]=\"updatemetricsName\"  formControlName=\"updatemetricsName\" [ngClass]=\"{ 'is-invalid': submitted && up.updatemetricsName.errors }\">\r\n                    <option *ngFor=\"let data of metrics\" [value] =\"data.Measure\">{{data.Measure}}</option>\r\n                </select>\r\n                 <div *ngIf=\"submitted && up.updatemetricsName.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatemetricsName.errors.required\">Metric is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Volume </label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{volume}}\" name=\"updatevolume\" [(ngModel)]=\"updatevolume\"  formControlName=\"updatevolume\" [ngClass]=\"{ 'is-invalid': submitted && up.updatevolume.errors }\">\r\n                <div *ngIf=\"submitted && up.updatevolume.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatevolume.errors.required\">Volume is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">  Buy Price </label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{buyPrice}}\" name=\"updatebuyPrice\" [(ngModel)]=\"updatebuyPrice\"  formControlName=\"updatebuyPrice\" [ngClass]=\"{ 'is-invalid': submitted && up.updatebuyPrice.errors }\">\r\n                <div *ngIf=\"submitted && up.updatebuyPrice.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatebuyPrice.errors.required\"> Buy Price is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Sell Price </label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{sellPrice}}\" name=\"updatesellPrice\" [(ngModel)]=\"updatesellPrice\"  formControlName=\"updatesellPrice\" [ngClass]=\"{ 'is-invalid': submitted && up.updatesellPrice.errors }\">\r\n                <div *ngIf=\"submitted && up.updatesellPrice.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatesellPrice.errors.required\">Sell Price is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">Min Sale Qty </label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{minSalQty}}\" name=\"updateminSalQty\" [(ngModel)]=\"updateminSalQty\"  formControlName=\"updateminSalQty\" [ngClass]=\"{ 'is-invalid': submitted && up.updateminSalQty.errors }\">\r\n                <div *ngIf=\"submitted && up.updateminSalQty.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateminSalQty.errors.required\">Min Sale Qty is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <div class=\"form-check tab-space\">\r\n                    <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"updatebuying\"  [checked] =\"buying\" name=\"updatebuying\"  formControlName=\"updatebuying\" >\r\n                    <label class=\"form-check-lable\" >Buying</label>   \r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <div class=\"form-check tab-space\">\r\n                    <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"updateSelling\"  [checked]=\"selling\" name=\"updateSelling\"  formControlName=\"updateSelling\" >\r\n                    <label class=\"form-check-lable\" >Selling</label>   \r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Category Details </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{comment}}\" name=\"updatecomment\" [(ngModel)]=\"updatecomment\"  formControlName=\"updatecomment\" ></textarea>\r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-expences-type',\r\n  templateUrl: './expences-type.component.html',\r\n  styleUrls: ['./expences-type.component.scss']\r\n})\r\nexport class ExpencesTypeComponent implements OnInit {\r\n \r\n  expences:FormGroup;\r\n  submitted:boolean;\r\n  ExpencesType:any;\r\n  exprencedata:any;\r\n  _id:any;\r\n  updateexpences:FormGroup;\r\n  updateExpencesType:any;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n \r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }   \r\n\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.view();\r\n    this.updateValidator();\r\n  }\r\n\r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.expences.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.expences.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.expences = this.formBuilder.group({\r\n      ExpencesType:[\"\",Validators.required],\r\n    });\r\n   }\r\n\r\n   //view\r\n view(){\r\n  this.supplerService.viewExpenceType().subscribe(\r\n    (res)=>{\r\n      this.exprencedata = res['data'];\r\n      console.log(res);\r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n\r\n }\r\n  \r\n //add\r\n  add(){\r\n    this.submitted = true;\r\n    if (this.expences.invalid) {\r\n       return;\r\n      }\r\n      const adddata = {\r\n        ExpencesType:this.ExpencesType\r\n      }\r\n      this.supplerService.AddExpenceType(adddata).subscribe(\r\n        (res)=>{\r\n          if(res['status']){\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n           }\r\n          else{\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n           }\r\n           \r\n          this.resetForm();\r\n           this.view(); \r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n  //delete\r\n  onDelete(_deleteID){\r\n\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.DeleteExpenceType(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  //Active\r\n  onActive(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.ActiveExpenceType(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n   //get value from\r\n   get up(){\r\n    return this.updateexpences.controls;\r\n  }\r\n   \r\n  closeModel(){\r\n    this.closebutton.nativeElement.click();\r\n  }\r\n   //update validator\r\n   updateValidator(){\r\n    this.updateexpences = this.formBuilder.group({\r\n      updateExpencesType:[\"\",Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n  //data bound to value\r\n  bind(){\r\n    this.updateExpencesType = this.ExpencesType;\r\n    this.unbind();\r\n  }\r\n  unbind(){\r\n    this.ExpencesType = null;\r\n  }\r\n\r\n\r\n//set  update model\r\n  Update(data){\r\n     this.ExpencesType = data['ExpencesType'];\r\n     this._id = data['_id'];\r\n     this.bind();\r\n  \r\n  }\r\n\r\n  //set the modal to data\r\n  onUpdate(){\r\n  \r\n    this.submitted = true;\r\n    if (this.updateexpences.invalid) {\r\n      return;\r\n       }\r\n\r\n    const data = {\r\n       ExpencesType :this.updateExpencesType,\r\n       _id:this._id\r\n    }\r\n    \r\n     this.closeModel();\r\n    this.supplerService.UpdateExpenceType(data).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Expences Type</h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"expences\" (submit)= \"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Expences Type </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Electronic\" name=\"ExpencesType\" [(ngModel)]=\"ExpencesType\"  formControlName=\"ExpencesType\" [ngClass]=\"{ 'is-invalid': submitted && f.ExpencesType.errors }\">\r\n                <div *ngIf=\"submitted && f.ExpencesType.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.ExpencesType.errors.required\">ExpencesType is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">ExpenceType Name</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of exprencedata;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.ExpencesType}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Expences Type Update</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form (submit) = \"onUpdate()\" [formGroup] = \"updateexpences\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient-name\" class=\"col-form-label\">Expences Type </label>\r\n            <input type=\"text\" class=\"form-control\"  value=\"{{ExpencesType}}\" name=\"updateExpencesType\" [(ngModel)]=\"updateExpencesType\"  formControlName=\"updateExpencesType\" [ngClass]=\"{ 'is-invalid': submitted && up.updateExpencesType.errors }\">\r\n            <div *ngIf=\"submitted && up.updateExpencesType.errors\" class=\"invalid-feedback\">\r\n               <div *ngIf=\"up.updateExpencesType.errors.required\">Expences Type   is required</div>\r\n             </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-expences',\r\n  templateUrl: './expences.component.html',\r\n  styleUrls: ['./expences.component.scss']\r\n})\r\nexport class ExpencesComponent implements OnInit {\r\n\r\n  expences:FormGroup;\r\n  submitted:boolean;\r\n  ExpencesType:any;\r\n  date:Date;\r\n  cost:any;\r\n  description:any;\r\n  comment:any;\r\n  exprencedata:any;\r\n  _id:any;\r\n  expenceTypedata:any;\r\n  updateExpences:FormGroup;\r\n  updateExpencesType:any;\r\n  updateDate:Date;\r\n  updateCost:any;\r\n  updateDescription:any;\r\n  updateComment:any;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.view();\r\n    this.LoadExpenceType();\r\n    this.updateValidator();\r\n  }\r\n\r\n  \r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.expences.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.expences.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.expences = this.formBuilder.group({\r\n      ExpencesType:[\"\",Validators.required],\r\n      date:[Date,Validators.required],\r\n      cost:[Number,Validators.required],\r\n      description:[\"\"],\r\n      comment:[\"\"]\r\n    });\r\n   }\r\n\r\n   //Load Expence Type\r\n   LoadExpenceType(){\r\n      this.supplerService.LoadExpenceType().subscribe(\r\n        (res)=>{\r\n          this.expenceTypedata = res[\"data\"];\r\n          console.log(this.expenceTypedata);\r\n        }\r\n      )\r\n   }\r\n   //view\r\n view(){\r\n  this.supplerService.viewExpence().subscribe(\r\n    (res)=>{\r\n      this.exprencedata = res['data'];\r\n      console.log(res);\r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n\r\n }\r\n  \r\n //add\r\n  add(){\r\n    this.submitted = true;\r\n    if (this.expences.invalid) {\r\n       return;\r\n      }\r\n      const adddata = {\r\n        date:this.date,\r\n        ExpencesType:this.ExpencesType,\r\n        cost:this.cost,\r\n        comment:this.comment,\r\n        description:this.description\r\n      }\r\n      console.log(adddata);\r\n      this.supplerService.AddExpence(adddata).subscribe(\r\n        (res)=>{\r\n          if(res['status']){\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n           }\r\n          else{\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n           }\r\n           \r\n          this.resetForm();\r\n           this.view(); \r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n  //delete\r\n  onDelete(_deleteID){\r\n\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.DeleteExpence(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  //Active\r\n  onActive(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.ActiveExpence(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n\r\n//get value from\r\nget up(){\r\n  return this.updateExpences.controls;\r\n}\r\n \r\ncloseModel(){\r\n  this.submitted = false;\r\n  this.closebutton.nativeElement.click();\r\n}\r\n //update validator\r\n updateValidator(){\r\n  this.updateExpences = this.formBuilder.group({\r\n    updateExpencesType:[\"\",Validators.required],\r\n    updateDate:[Date,Validators.required],\r\n    updateCost:[Number,Validators.required],\r\n    updateDescription:[\"\"],\r\n    updateComment:[\"\"]\r\n  });\r\n}\r\n\r\n//data bound to value\r\nbind(){\r\n  this.updateExpencesType = this.ExpencesType;\r\n  this.updateDate = this.date;\r\n  this.updateCost = this.cost;\r\n  this.updateDescription = this.description;\r\n  this.updateComment = this.comment;\r\n  this.unbind();\r\n}\r\n\r\nunbind(){\r\n  this.ExpencesType = null;\r\n  this.date = null;\r\n  this.cost = null;\r\n  this.description = null;\r\n  this.comment = null;\r\n}\r\n\r\n//set  update model\r\nUpdate(data){\r\n   this.ExpencesType = data['ExpencesType'];\r\n   //this.date = data['date']\r\n   this._id = data['_id'];\r\n   this.cost = data['cost'];\r\n   this.description = data['description'];\r\n   this.comment = data['comment'];\r\n   this.bind();\r\n}\r\n\r\n// modal to data service\r\nonUpdate(){\r\n\r\n  this.submitted = true;\r\n  if (this.updateExpences.invalid) {\r\n    return;\r\n     }\r\n\r\n  const data = {\r\n    _id:this._id,\r\n    ExpencesType:this.updateExpencesType,\r\n    date:this.updateDate,\r\n    cost:this.updateCost,\r\n    description:this.updateDescription,\r\n    comment:this.updateComment\r\n \r\n  }\r\n console.log(data);\r\n   this.closeModel();\r\n  this.supplerService.UpdateExpence(data).subscribe(\r\n    (res)=>{\r\n      if(res['status']){\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n       }\r\n      else{\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n       }\r\n       \r\n       this.resetForm();\r\n       this.view(); \r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Expences </h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form [formGroup] = \"expences\" (submit)= \"add()\" action=\"\">\r\n\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Date </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"date\" class=\"form-control\" placeholder=\"\" name=\"date\" [(ngModel)]=\"date\"  formControlName=\"date\" [ngClass]=\"{ 'is-invalid': submitted && f.date.errors }\">\r\n                <div *ngIf=\"submitted && f.date.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.date.errors.required\">Date is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Expences Type </label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"ExpencesType\" name=\"ExpencesType\"  formControlName=\"ExpencesType\"  [ngClass]=\"{ 'is-invalid': submitted && f.ExpencesType.errors }\">\r\n                    <option *ngFor=\"let data of expenceTypedata\" [value] =\"data.ExpencesType\">{{data.ExpencesType}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.ExpencesType.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.ExpencesType.errors.required\">ExpencesType is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Cost </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 2000.00\" name=\"cost\" [(ngModel)]=\"cost\"  formControlName=\"cost\" [ngClass]=\"{ 'is-invalid': submitted && f.cost.errors }\">\r\n                <div *ngIf=\"submitted && f.cost.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.cost.errors.required\">Cost is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Description</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea  class=\"form-control\" id=\"\"  rows=\"3\"  [(ngModel)]=\"description\" name=\"description\"  formControlName=\"description\"></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Comment</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea class=\"form-control\" id=\"\"  rows=\"3\"  [(ngModel)]=\"comment\" name=\"comment\"  formControlName=\"comment\"></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Date </th>\r\n            <th scope=\"col\">ExpenceType </th>\r\n            <th scope=\"col\">cost </th>\r\n            <th scope=\"col\">Description </th>\r\n            <th scope=\"col\">Comment </th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of exprencedata;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.date | date}}</td>\r\n            <td>{{data.ExpencesType}}</td>\r\n            <td>{{data.cost}}</td>\r\n            <td>{{data.description}}</td>\r\n            <td>{{data.comment}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Expences Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updateExpences\">\r\n            <div class=\"form-group\" >\r\n              <label for=\"name\" class=\"col-form-label\">Date</label>\r\n              <input type=\"date\" class=\"form-control\"  value=\"{{date}}\" name=\"updateDate\" [(ngModel)]=\"updateDate\"  formControlName=\"updateDate\" [ngClass]=\"{ 'is-invalid': submitted && up.updateDate.errors }\">\r\n              <div *ngIf=\"submitted && up.updateDate.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updateDate.errors.required\">Date is required</div>\r\n               </div>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Expences Type </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{ExpencesType}}\" name=\"updateExpencesType\" [(ngModel)]=\"updateExpencesType\"  formControlName=\"updateExpencesType\" [ngClass]=\"{ 'is-invalid': submitted && up.updateExpencesType.errors }\">\r\n                    <option *ngFor=\"let data of expenceTypedata\" [value] =\"data.ExpencesType\">{{data.ExpencesType}}</option>\r\n                </select>\r\n              <div *ngIf=\"submitted && up.updateExpencesType.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateExpencesType.errors.required\">Expences Type  is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">Cost</label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{cost}}\" name=\"updateCost\" [(ngModel)]=\"updateCost\"  formControlName=\"updateCost\" [ngClass]=\"{ 'is-invalid': submitted && up.updateCost.errors }\">\r\n                <div *ngIf=\"submitted && up.updateCost.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateCost.errors.required\">Cost is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Description </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{description}}\" name=\"updateDescription\" [(ngModel)]=\"updateDescription\"  formControlName=\"updateDescription\" ></textarea>          \r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Comment </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{comment}}\" name=\"updateComment\" [(ngModel)]=\"updateComment\"  formControlName=\"updateComment\" ></textarea>          \r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\nimport { from } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst apiUrl=\"http://localhost:3000\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit(){\r\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n            data => {\r\n              console.log(data);\r\n              if(data['data'].status==\"active\"){\r\n                console.log(\"Activated\");\r\n                if(data['data'].role==\"medRep\"){\r\n                  console.log(\"medRep\");\r\n                  this.router.navigateByUrl(`/rep-home`);\r\n                }\r\n                if(data['data'].role==\"storeManager\"){\r\n                  console.log(\"storeManager\");\r\n                  this.router.navigateByUrl(`/manager-home`);\r\n                }\r\n              }\r\n              if(data['data'].status==\"Inactive\"){\r\n                console.log(\"Not Activated\");\r\n                this.router.navigateByUrl(`/login`);\r\n              }\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            });\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"bg\">\r\n    <div style=\"margin: 0px 0px 0px 400px; padding-top: 150px;\">\r\n      <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n        <mat-card-title>Login</mat-card-title>\r\n        <mat-card-content>\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <p>\r\n              <mat-form-field>\r\n                <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n              </mat-form-field>\r\n            </p>\r\n    \r\n            <p>\r\n              <mat-form-field>\r\n                <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n              </mat-form-field>\r\n            </p>\r\n      \r\n            <div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n            </div>\r\n            <div class=\"m-3\">\r\n              Not yet a member ? <a routerLink='/register'>Sign Up</a>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-manager-home',\r\n  templateUrl: './manager-home.component.html',\r\n  styleUrls: ['./manager-home.component.scss']\r\n})\r\nexport class ManagerHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>manager-home works!</p>\r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-metrics',\r\n  templateUrl: './metrics.component.html',\r\n  styleUrls: ['./metrics.component.scss']\r\n})\r\nexport class MetricsComponent implements OnInit {\r\n\r\n  metricsform:FormGroup;\r\n  updatemetricsform:FormGroup;\r\n  metricsName:any;\r\n  metrics:any;\r\n  metricsID:any;\r\n  mersure:any;\r\n  _id:any;\r\n  submitted:boolean;\r\n  updatemetricsname:any;\r\n  @ViewChild('closebutton') closebutton;\r\n  \r\n  constructor(private supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n   this.validator();\r\n    this.viewMetrics();\r\n    this.updateValidator();\r\n  }\r\n\r\n  //get value from\r\n  get f(){\r\n    return this.metricsform.controls;\r\n  }\r\n\r\n\r\n  //validator\r\n  validator(){\r\n    this.metricsform = this.formBuilder.group({\r\n      metricsName:[\"\",Validators.required]\r\n    });\r\n  }\r\n\r\n \r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.metricsform.reset();\r\n  }\r\n\r\n  //View Metrics\r\n  viewMetrics(){\r\n    this.supplerService.viewAllMetrics().subscribe(\r\n      (myMetrics)=>{\r\n          this.metrics = myMetrics[\"data\"];\r\n          console.log(this.metrics);\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Metrics Add to DB\r\n  AddMetrics(){\r\n\r\n   this.submitted = true;\r\n    if (this.metricsform.invalid) {\r\n      return;\r\n       }\r\n\r\n    const add = {Measure:this.metricsName}\r\n    this.supplerService.AddMetrics(add).subscribe(\r\n      (myMetrics)=>{\r\n        if(myMetrics['status']){\r\n          this._flashMessagesService.show(myMetrics['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(myMetrics['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.viewMetrics();       \r\n      },\r\n      (err)=>{\r\n       console.log(err);\r\n      }\r\n    );\r\n  }\r\n//Metrics Delete\r\n  onDelete(_deleteID){\r\n    var del = { metricsID:_deleteID}\r\n     \r\n    this.supplerService.onDelete(del).subscribe(\r\n      (delMetrics)=>{\r\n        console.log(delMetrics);\r\n        this._flashMessagesService.show(delMetrics['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.viewMetrics();\r\n      }\r\n    );\r\n  }\r\n// delete metrics again active\r\n  onActive(_ActiveID){\r\n    var del = { metricsID:_ActiveID}\r\n     \r\n    this.supplerService.onActive(del).subscribe(\r\n      (delMetrics)=>{\r\n        console.log(delMetrics);\r\n        this._flashMessagesService.show(delMetrics['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.viewMetrics();\r\n      }\r\n    );\r\n  }\r\n\r\n   //get value from\r\n   get up(){\r\n    return this.updatemetricsform.controls;\r\n  }\r\n   \r\n  closeModel(){\r\n    \r\n    this.closebutton.nativeElement.click();\r\n  }\r\n   //update validator\r\n   updateValidator(){\r\n    this.updatemetricsform = this.formBuilder.group({\r\n      updatemetricsname:[\"\",Validators.required]\r\n    });\r\n  }\r\n\r\n  //data bound to value\r\n  bind(){\r\n    this.updatemetricsname = this.mersure;\r\n    this.unbind();\r\n  }\r\n\r\n  unbind(){\r\n    this.mersure = null;\r\n  }\r\n//set metrics update model\r\n  Update(data){\r\n     this.mersure = data['Measure'];\r\n     this._id = data['_id'];\r\n      this.bind();\r\n  }\r\n\r\n  //set the modal to data\r\n  onUpdate(){\r\n  \r\n    this.submitted = true;\r\n    if (this.updatemetricsform.invalid) {\r\n      return;\r\n       }\r\n\r\n    const data = {\r\n       mersure:this.updatemetricsname,\r\n       _id:this._id\r\n    }\r\n     this.closeModel();\r\n    this.supplerService.onUpdateMetrics(data).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.viewMetrics(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Metrics</h2>\r\n<br><br>\r\n\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"metricsform\" (submit)=\"AddMetrics()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Metrics Name</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"kg\" name=\"metricsName\" [(ngModel)]=\"metricsName\" formControlName=\"metricsName\" [ngClass]=\"{ 'is-invalid': submitted && f.metricsName.errors }\">\r\n                <div *ngIf=\"submitted && f.metricsName.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.metricsName.errors.required\">Metrics Name  is required</div>\r\n              </div>\r\n              </div>\r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n \r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Metrics Name</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of metrics;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.Measure}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate| date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Metrics Update</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form (submit) = \"onUpdate()\" [formGroup] = \"updatemetricsform\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient-name\" class=\"col-form-label\">Metrics Name</label>\r\n            <input type=\"text\" class=\"form-control\"  value=\"{{mersure}}\" name=\"updatemetricsname\" [(ngModel)]=\"updatemetricsname\"  formControlName=\"updatemetricsname\" [ngClass]=\"{ 'is-invalid': submitted && up.updatemetricsname.errors }\">\r\n            <div *ngIf=\"submitted && up.updatemetricsname.errors\" class=\"invalid-feedback\">\r\n               <div *ngIf=\"up.updatemetricsname.errors.required\">Metrics Name  is required</div>\r\n             </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nimport { AuthenticationService } from \"../_services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-nav-bar-rep',\r\n  templateUrl: './nav-bar-rep.component.html',\r\n  styleUrls: ['./nav-bar-rep.component.scss']\r\n})\r\nexport class NavBarRepComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n    private AuthenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogout() {\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#\">TSMS</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item avtive\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/rep-home']\" routerLinkActive=\"is-active\">Add Order <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/rep-orders']\" routerLinkActive=\"is-active\">My Orders</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/addshop']\" routerLinkActive=\"is-active\">Add Shop</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/product']\" routerLinkActive=\"is-active\">Product</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/activeUser']\" routerLinkActive=\"is-active\">Active User</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/metrics']\" routerLinkActive=\"is-active\">Metrics</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Artical\r\n          </a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/artical-category']\" routerLinkActive=\"is-active\">Artical Category</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/artical']\" routerLinkActive=\"is-active\">Artical</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Suppler\r\n          </a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/suppler']\" routerLinkActive=\"is-active\">Suppler </a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/supplerInvoice']\" routerLinkActive=\"is-active\">Suppler Invoice </a>\r\n          </div>\r\n        </li>\r\n          <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Expences\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <a class=\"dropdown-item\" [routerLink]=\"['/ExpencesType']\" routerLinkActive=\"is-active\">Expences Type </a>\r\n              <div class=\"dropdown-divider\"></div>\r\n              <a class=\"dropdown-item\" [routerLink]=\"['/Expences']\" routerLinkActive=\"is-active\">Expences</a>\r\n              <div class=\"dropdown-divider\"></div>\r\n              <a class=\"dropdown-item\" [routerLink]=\"['/TransportExpencesType']\" routerLinkActive=\"is-active\">Transport Expences Type</a>\r\n              <div class=\"dropdown-divider\"></div>\r\n              <a class=\"dropdown-item\" [routerLink]=\"['/vehicle']\" routerLinkActive=\"is-active\">Vehicle</a>\r\n              <div class=\"dropdown-divider\"></div>\r\n              <a class=\"dropdown-item\" [routerLink]=\"['/TransportExpences']\" routerLinkActive=\"is-active\">Transport Expences</a>\r\n            </div>\r\n        </li>\r\n\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Static Reports\r\n          </a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/salesdaystatic']\" routerLinkActive=\"is-active\">Sale Day</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/salesmonthstatic']\" routerLinkActive=\"is-active\">Sale Month</a>\r\n          </div>\r\n        </li>\r\n        \r\n      </ul>\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" (click)=\"onLogout()\">Logout</button>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n\r\n  productfrom:FormGroup;\r\n  submitted:boolean;\r\n  productName:any;\r\n  obj:any;\r\n  _id:any;\r\n  updateproductform:FormGroup;\r\n  updateproductname:any;\r\n  productModalName:any;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n  constructor(public supplerService:SupplerService,\r\n    private formBuilder: FormBuilder,\r\n    private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.view();\r\n    this.validator();\r\n    this.updateValidator();\r\n  }\r\n\r\n  get f(){\r\n    return this.productfrom.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.productfrom.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.productfrom = this.formBuilder.group({\r\n    productName:[\"\",Validators.required],\r\n  });\r\n}\r\n\r\n  //view Product \r\n  view(){\r\n    this.supplerService.viewProduct().subscribe(\r\n       (data)=>{\r\n        this.obj = data['data'];\r\n        console.log(data);\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       }\r\n    );\r\n  }\r\n\r\n\r\n  //add Product\r\n  add(){\r\n    \r\n    this.submitted = true;\r\n    if (this.productfrom.invalid) {\r\n           return;\r\n       }\r\n\r\n    const addobj = {\r\n      productName:this.productName\r\n    }\r\n    \r\n    this.supplerService.AddProduct(addobj).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view();  \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //Product Delete\r\nonDelete(_deleteID){\r\n  var del = { _id:_deleteID}\r\n   \r\n  this.supplerService.ProductDelete(del).subscribe(\r\n    (res)=>{\r\n      console.log(res);\r\n      this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n      this.view();\r\n    }\r\n  );\r\n}\r\n// delete Artical again active\r\nonActive(_ActiveID){\r\n  var del = { _id:_ActiveID}\r\n   \r\n  this.supplerService.ProductActive(del).subscribe(\r\n    (res)=>{\r\n      console.log(res);\r\n      this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n      this.view();\r\n    }\r\n  );\r\n}\r\n\r\n  //get value from\r\n  get up(){\r\n    return this.updateproductform.controls;\r\n  }\r\n   \r\n  closeModel(){\r\n    this.closebutton.nativeElement.click();\r\n  }\r\n   //update validator\r\n   updateValidator(){\r\n    this.updateproductform = this.formBuilder.group({\r\n      updateproductname:[\"\",Validators.required]\r\n    });\r\n  }\r\n\r\n  //data bound to value\r\n  bind(){\r\n    this.updateproductname = this.productModalName;\r\n    this.unbind();\r\n  }\r\n  \r\n  unbind(){\r\n    this.productModalName = null;\r\n  }\r\n//set metrics update model\r\n  Update(data){\r\n     this.productModalName = data['productName'];\r\n     this._id = data['_id'];\r\n     this.bind();\r\n  \r\n  }\r\n\r\n  //set the modal to data\r\n  onUpdate(){\r\n  \r\n    this.submitted = true;\r\n    if (this.updateproductform.invalid) {\r\n      return;\r\n       }\r\n\r\n    const data = {\r\n      productName:this.updateproductname,\r\n       _id:this._id\r\n    }\r\n    \r\n     this.closeModel();\r\n    this.supplerService.UpdateProduct(data).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","<br>\r\n<h2 class=\"col-md-11 text-center\"> Product</h2>\r\n<br><br>\r\n<app-nav-bar-rep></app-nav-bar-rep>\r\n<h2 class=\"col-md-11 text-center\"> Product</h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"productfrom\" (submit)=\"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Product Name</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Kithul\" name=\"productName\" [(ngModel)]=\"productName\" formControlName=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && f.productName.errors }\">\r\n                <div *ngIf=\"submitted && f.productName.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.productName.errors.required\">Product Name is required</div>\r\n                </div>\r\n           </div>\r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Product  Name</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of obj;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.productName}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Product Update</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form (submit) = \"onUpdate()\" [formGroup] = \"updateproductform\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient-name\" class=\"col-form-label\">Product Name</label>\r\n            <input type=\"text\" class=\"form-control\"  value=\"{{productModalName}}\" name=\"updateproductname\" [(ngModel)]=\"updateproductname\"  formControlName=\"updateproductname\" [ngClass]=\"{ 'is-invalid': submitted && up.updateproductname.errors }\">\r\n            <div *ngIf=\"submitted && up.updateproductname.errors\" class=\"invalid-feedback\">\r\n               <div *ngIf=\"up.updateproductname.errors.required\">Product Name  is required</div>\r\n             </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { error } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      fname: ['', Validators.required],\r\n      lname: ['', Validators.required],\r\n      mobile: ['', [Validators.required,Validators.maxLength(10)]],\r\n      email: ['', Validators.email],\r\n      nic: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.userService.registerUser(this.registerForm.value).subscribe(\r\n      data=>{\r\n        console.log(data);\r\n        this.router.navigateByUrl(`/login`);\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n      this.registerForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"bg\">\r\n    <div style=\"margin: 0px 0px 0px 400px; padding-top: s50px;\">\r\n        <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n            <mat-card-title>Sign Up</mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"FirstName\" formControlName=\"fname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"LastName\" formControlName=\"lname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"number\" matInput placeholder=\"Mobile No\" formControlName=\"mobile\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"NIC\" formControlName=\"nic\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router, NavigationEnd } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport * as $ from \"jquery\";\r\n\r\nimport { AuthenticationService } from \"../_services/authentication.service\";\r\nimport { RepService } from \"../_services/rep.service\";\r\nimport { SupplerService } from \"../_services/suppler.service\";\r\n\r\n@Component({\r\n  selector: \"app-rep-home\",\r\n  templateUrl: \"./rep-home.component.html\",\r\n  styleUrls: [\"./rep-home.component.scss\"],\r\n})\r\nexport class RepHomeComponent implements OnInit {\r\n  apiUri = \"http://localhost:3000\";\r\n  shops: any;\r\n  productItems: any;\r\n  quantity: any = 0;\r\n  items = [];\r\n  itemNo: any = 0;\r\n  mySubscription: any;\r\n  billTotal: any = 0;\r\n  cashAmount: any;\r\n  chequeAmount: any;\r\n  creditAmount: any;\r\n  markedCash:any=false;\r\n  markedCheque:any=false;\r\n  markedCredit:any=false;\r\n  constructor(\r\n    private router: Router,\r\n    private AuthenticationService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private repservice: RepService,\r\n    private supplerservice: SupplerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.viewShops();\r\n    this.getProductItems();\r\n  }\r\n\r\n  toggleVisibilityCash(e){\r\n    this.markedCash= e.target.checked;\r\n  }\r\n  toggleVisibilityCheque(e){\r\n    this.markedCheque= e.target.checked;\r\n  }\r\n  toggleVisibilityCredit(e){\r\n    this.markedCredit= e.target.checked;\r\n  }\r\n\r\n  logOut() {\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n  \r\n  getProductItems() {\r\n    this.supplerservice.viewProduct().subscribe((data) => {\r\n      this.productItems = data[\"result\"];\r\n      console.log(this.productItems);\r\n    });\r\n  }\r\n\r\n  getPrice(name) {\r\n    for (var i = 0; i < this.productItems.length; i++) {\r\n      if (this.productItems[i].Item === name) {\r\n        return this.productItems[i].SellUnitPrice;\r\n      }\r\n    }\r\n  }\r\n\r\n  addItem(quantity) {\r\n    this.billTotal = 0;\r\n    var itemName = $(\"#selectItem\").val();\r\n    var itemPrice = this.getPrice(itemName);\r\n    var totalPrice = itemPrice * quantity;\r\n    this.items.push({\r\n      itemName: itemName,\r\n      quantity: quantity,\r\n      price: totalPrice,\r\n    });\r\n    this.calculateBill();\r\n  }\r\n\r\n  deleteItem(item) {\r\n    this.billTotal = 0;\r\n    console.log(item);\r\n    for (var i = 0; i < this.items.length; i++) {\r\n      if (this.items[i].itemName === item) {\r\n        this.items.splice(i, 1);\r\n        this.calculateBill();\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateBill() {\r\n    for (var i = 0; i < this.items.length; i++) {\r\n      this.billTotal = this.billTotal + this.items[i].price;\r\n    }\r\n  }\r\n\r\n  addOrder() {\r\n    var shopName = $(\"#shopName\").val();\r\n    var date = $(\"#datePicker\").val();\r\n    var order = {\r\n      shopName: shopName,\r\n      date: date,\r\n      details: this.items,\r\n      billTotal: this.billTotal,\r\n      cashAmount: this.cashAmount,\r\n      chequeAmount: this.chequeAmount,\r\n      creditAmount: this.creditAmount,\r\n    };\r\n    this.repservice.addOrder(order).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.router.navigateByUrl('/rep-home')\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  viewShops() {\r\n    this.repservice.allShops().subscribe(\r\n      (data) => {\r\n        this.shops = data[\"data\"];\r\n        console.log(this.shops);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<div class=\"container\">\r\n    <h3 class=\"mb-5 text-center\" style=\"margin-top: 70px;\">Add Order Details</h3>\r\n    <form>\r\n         <div class=\"form-group row\">\r\n              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Shop</label>\r\n              <div class=\"col-sm-10\">\r\n                   <select class=\"form-control \" id=\"shopName\" >\r\n                        <option *ngFor=\"let shop of shops\" >{{shop.shopName}}</option>\r\n                   </select>\r\n              </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Date</label>\r\n              <div class=\"col-sm-10\">\r\n                   <input id=\"datePicker\" type=\"text\" class=\"form-control\" bsDatepicker>\r\n              </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Product</label>\r\n              <div class=\"row ml-3\">\r\n                   <select class=\"form-control\" id=\"selectItem\">\r\n                        <option *ngFor=\"let productItem of productItems\">{{productItem.Item}}</option>\r\n                   </select>\r\n              </div>\r\n         </div>\r\n         <div class=\"form-group\">\r\n              <table class=\"table\">\r\n                   <thead>\r\n                        <tr>\r\n                             <th scope=\"col\">#</th>\r\n                             <th scope=\"col\">Product Item</th>\r\n                             <th scope=\"col\">Quantity</th>\r\n                             <th scope=\"col\">Price</th>\r\n                             <th scope=\"col\"></th>\r\n                        </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                        <tr *ngFor=\"let item of items;let i=index \">\r\n                             <th scope=\"row\">{{i+1}}</th>\r\n                             <td>{{item.itemName}}</td>\r\n                             <td>{{item.quantity}}</td>\r\n                             <td>{{item.price}}</td>\r\n                             <td id=\"deleteButton\"><button class=\"btn btn-danger btn-sm\"\r\n                                       (click)=\"deleteItem(item.itemName)\">Delete</button></td>\r\n                        </tr>\r\n                   </tbody>\r\n              </table>\r\n         </div>\r\n         <div class=\"form-group row mt-5\">\r\n              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Total Amount</label>\r\n              <div class=\"col-sm-10\">\r\n                   <input class=\"form-control\" type=\"text\" value=\"{{billTotal}}\" disabled>\r\n              </div>\r\n         </div>\r\n         <div class=\"form-group row\">\r\n              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Payment Type</label>\r\n              <div class=\"form-check form-check-inline ml-3\">\r\n                   <input id=\"check1\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleVisibilityCash($event)\" value=\"option1\">\r\n                   <label class=\"form-check-label\" for=\"inlineCheckbox1\">Cash</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                   <input id=\"check2\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleVisibilityCheque($event)\" value=\"option2\">\r\n                   <label class=\"form-check-label\" for=\"inlineCheckbox2\">Cheque</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                   <input id=\"check3\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleVisibilityCredit($event)\" value=\"option3\">\r\n                   <label class=\"form-check-label\" for=\"inlineCheckbox3\">Credit</label>\r\n              </div>\r\n         </div>\r\n         <div class=\"form-group row \" >\r\n              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\"></label>\r\n              <div class=\"mr-2 ml-3\" *ngIf=\"markedCash\">\r\n                   <input id=\"cashType\" class=\"form-control form-control-sm\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"cashAmount\" type=\"text\" placeholder=\"Cash Amount\">\r\n              </div>\r\n              <div class=\"mr-2\" *ngIf=\"markedCheque\">\r\n                   <input id=\"chequeType\" class=\"form-control form-control-sm\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"chequeAmount\" type=\"text\" placeholder=\"Cheque Amount\">\r\n              </div>\r\n              <div *ngIf=\"markedCredit\">\r\n                   <input id=\"creditType\" class=\"form-control form-control-sm\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"creditAmount\" type=\"text\" placeholder=\"Credit Amount\">\r\n              </div>\r\n         </div>\r\n         <div class=\"text-center\">\r\n              <button (click)=\"addOrder()\" class=\"btn btn-primary\">\r\n                   Submit</button>\r\n         </div>\r\n         \r\n    </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rep-orders',\r\n  templateUrl: './rep-orders.component.html',\r\n  styleUrls: ['./rep-orders.component.scss']\r\n})\r\nexport class RepOrdersComponent implements OnInit {\r\n\r\n  user:any;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.user=JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    console.log(this.user['data'].id);\r\n    \r\n  }\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<div class=\"container\" style=\"margin-top: 70px;\">\r\n    <div class=\"mb-3\"><h1> My orders:</h1></div>\r\n   \r\n    <ul class=\"nav nav-tabs\">\r\n        <li class=\"nav-item \">\r\n          <a class=\"nav-link active\" href=\"#\">All Orders</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link \" href=\"#\">Money to be collected</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link \" href=\"#\">Half way collected</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link \" href=\"#\">Completed</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link \" href=\"#\">Collect in next 7 days</a>\r\n          </li>\r\n          \r\n      </ul>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sales-day-static',\r\n  templateUrl: './sales-day-static.component.html',\r\n  styleUrls: ['./sales-day-static.component.scss']\r\n})\r\nexport class SalesDayStaticComponent implements OnInit {\r\n\r\n  salesDayStatics:FormGroup;\r\n  submitted:boolean;\r\n  fromDate:Date;\r\n  toDate:Date;\r\n  articalCategory:any;\r\n  artical:any;\r\n  articalCategoryData:any;\r\n  articalData:any;\r\n\r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.LoadArticalCategory();\r\n    this.LoadArtical();\r\n  }\r\n  \r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.salesDayStatics.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.salesDayStatics.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.salesDayStatics = this.formBuilder.group({\r\n      fromDate:[Date,Validators.required],\r\n      toDate:[Date,Validators.required],\r\n      articalCategory:[\"\",Validators.required],\r\n      artical:[\"\",Validators.required],\r\n    });\r\n   }\r\n\r\n   LoadArticalCategory(){\r\n     this.supplerService.LoadArticalCategory().subscribe(\r\n       (res)=>{\r\n         this.articalCategoryData = res['data'];\r\n         \r\n       })\r\n   }\r\n\r\n   LoadArtical(){\r\n    this.supplerService.LoadArtical().subscribe(\r\n      (res)=>{\r\n        this.articalData = res['data'];\r\n      })\r\n  }\r\n\r\n\r\n   find(){\r\n    this.submitted = true;\r\n    if (this.salesDayStatics.invalid) {\r\n       return;\r\n      }\r\n       const findData = {\r\n            todate:this.toDate,\r\n            fromDate:this.fromDate,\r\n            articalCategory:this.articalCategory,\r\n            artical:this.artical\r\n       }\r\n       console.log(findData);\r\n   }\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Sales Day Statics</h2>\r\n<br><br>\r\n\r\n\r\n<div class=\"container\">\r\n    <form action=\"\"  [formGroup] = \"salesDayStatics\" (submit)= \"find()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">From </label>\r\n            <div class=\"col-sm-5\">            \r\n                <input type=\"date\" class=\"form-control\"  name=\"fromDate\" [(ngModel)]=\"fromDate\"  formControlName=\"fromDate\" [ngClass]=\"{ 'is-invalid': submitted && f.fromDate.errors }\">\r\n                <div *ngIf=\"submitted && f.fromDate.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.fromDate.errors.required\">Date is required</div>\r\n                </div>\r\n            </div>       \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">To </label>\r\n            <div class=\"col-sm-5\">            \r\n                <input type=\"date\" class=\"form-control\"  name=\"toDate\" [(ngModel)]=\"toDate\"  formControlName=\"toDate\" [ngClass]=\"{ 'is-invalid': submitted && f.toDate.errors }\">\r\n                <div *ngIf=\"submitted && f.toDate.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.toDate.errors.required\">Date is required</div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Artical Category </label>\r\n            <div class=\"col-sm-5\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"articalCategory\" name=\"articalCategory\"  formControlName=\"articalCategory\"  [ngClass]=\"{ 'is-invalid': submitted && f.articalCategory.errors }\">\r\n                    <option *ngFor=\"let data of articalCategoryData\" [value] =\"data._id\">{{data.categoryName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.articalCategory.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.articalCategory.errors.required\">Artical Category is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Artical  </label>\r\n            <div class=\"col-sm-5\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"artical\" name=\"artical\"  formControlName=\"artical\"  [ngClass]=\"{ 'is-invalid': submitted && f.artical.errors }\">\r\n                    <option *ngFor=\"let data of articalData\" [value] =\"data._id\">{{data.articalName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.artical.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.artical.errors.required\">Artical  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-8 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">view</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  <br><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Artical Name </th>\r\n            <th scope=\"col\">Sold Qty</th>\r\n            <th scope=\"col\">kg</th>\r\n            <th scope=\"col\">Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           <tr >           \r\n           </tr>\r\n         </tbody>\r\n    </table> \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { MatMonthView } from '@angular/material/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-sales-month-static',\r\n  templateUrl: './sales-month-static.component.html',\r\n  styleUrls: ['./sales-month-static.component.scss']\r\n})\r\nexport class SalesMonthStaticComponent implements OnInit {\r\n\r\n  \r\n  salesDayStatics:FormGroup;\r\n  submitted:boolean;\r\n  month:Date;\r\n  articalCategory:any;\r\n  artical:any;\r\n  articalCategoryData:any;\r\n  articalData:any;\r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.LoadArticalCategory();\r\n    this.LoadArtical();\r\n  }\r\n\r\n  \r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.salesDayStatics.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.salesDayStatics.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.salesDayStatics = this.formBuilder.group({\r\n      month:[Number,Validators.required],\r\n      articalCategory:[Date,Validators.required],\r\n      artical:[\"\",Validators.required],\r\n    });\r\n   }\r\n\r\n   LoadArticalCategory(){\r\n     this.supplerService.LoadArticalCategory().subscribe(\r\n       (res)=>{\r\n         this.articalCategoryData = res['data'];\r\n         \r\n       })\r\n   }\r\n\r\n   LoadArtical(){\r\n    this.supplerService.LoadArtical().subscribe(\r\n      (res)=>{\r\n        this.articalData = res['data'];\r\n      })\r\n  }\r\n\r\n\r\n   find(){\r\n    this.submitted = true;\r\n    if (this.salesDayStatics.invalid) {\r\n       return;\r\n      }\r\n       const findData = {\r\n            month:this.month,\r\n            articalCategory:this.articalCategory,\r\n            artical:this.artical\r\n       }\r\n       console.log(findData);\r\n   }\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Sales Day Statics</h2>\r\n<br><br>\r\n\r\n\r\n<div class=\"container\">\r\n    <form action=\"\"  [formGroup] = \"salesDayStatics\" (submit)= \"find()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Month </label>\r\n            <div class=\"col-sm-5\">            \r\n                <input type=\"month\" class=\"form-control\"  name=\"month\" [(ngModel)]=\"month\"  formControlName=\"month\" [ngClass]=\"{ 'is-invalid': submitted && f.month.errors }\">\r\n                <div *ngIf=\"submitted && f.month.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.month.errors.required\">Month is required</div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Artical Category </label>\r\n            <div class=\"col-sm-5\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"articalCategory\" name=\"articalCategory\"  formControlName=\"articalCategory\"  [ngClass]=\"{ 'is-invalid': submitted && f.articalCategory.errors }\">\r\n                    <option *ngFor=\"let data of articalCategoryData\" [value] =\"data._id\">{{data.categoryName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.articalCategory.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.articalCategory.errors.required\">Artical Category is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Artical  </label>\r\n            <div class=\"col-sm-5\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"artical\" name=\"artical\"  formControlName=\"artical\"  [ngClass]=\"{ 'is-invalid': submitted && f.artical.errors }\">\r\n                    <option *ngFor=\"let data of articalData\" [value] =\"data._id\">{{data.articalName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.artical.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.artical.errors.required\">Artical  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-8 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">view</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  <br><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Artical Name </th>\r\n            <th scope=\"col\">Sold Qty</th>\r\n            <th scope=\"col\">kg</th>\r\n            <th scope=\"col\">Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           <tr >           \r\n           </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stock-warehouse',\r\n  templateUrl: './stock-warehouse.component.html',\r\n  styleUrls: ['./stock-warehouse.component.scss']\r\n})\r\nexport class StockWarehouseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>stock-warehouse works!</p>\r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-suppler-invoice',\r\n  templateUrl: './suppler-invoice.component.html',\r\n  styleUrls: ['./suppler-invoice.component.scss']\r\n})\r\nexport class SupplerInvoiceComponent implements OnInit {\r\n\r\n  SupplerInvoice:FormGroup;\r\n  submitted:boolean;\r\n  articalCategoryname:any;\r\n  articalCategory:any;\r\n  articalname:any;\r\n  artical:any;\r\n  supplername:any;\r\n  suppler:any;\r\n  orderNumber:any;\r\n  invoiceNumber:any;\r\n  totalPrice:any;\r\n  quantity:any;\r\n  comment:any;\r\n  buying:Boolean;\r\n  selling:Boolean;\r\n  obj:any;\r\n  _id:any;\r\n  updateSupplerInvoice:FormGroup;\r\n  updatearticalCategoryname:any;\r\n  updatearticalname:any;\r\n  updatesupplername:any;\r\n  updateorderNumber:any;\r\n  updateinvoiceNumber:any;\r\n  updatetotalPrice:any;\r\n  updatequantity:any;\r\n  updatecomment:any;\r\n  updatebuying:any;\r\n  updateselling:any;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n\r\n  constructor( public SupplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.buying = false;\r\n    this.selling = false;\r\n    this.updateselling = false;\r\n    this.updatebuying = false;\r\n    this.validator();\r\n    this.view();\r\n    this.LoadSuppler();\r\n    this.LoadArtical();\r\n    this.LoadArticalCategory();\r\n    this.updateValidator();\r\n    \r\n  }\r\n\r\n     //get value from\r\n     get f(){\r\n      return this.SupplerInvoice.controls;\r\n    }\r\n  \r\n    // reset from\r\n    resetForm(){\r\n      this.submitted = false;   \r\n      this.SupplerInvoice.reset();\r\n    }\r\n  \r\n  \r\n  \r\n    //validator\r\n    validator(){\r\n    this.SupplerInvoice = this.formBuilder.group({\r\n      articalCategoryname:[\"\",Validators.required],\r\n      articalname:[\"\",Validators.required],\r\n      supplername:[\"\",Validators.required],\r\n      orderNumber:[\"\",Validators.required],\r\n      invoiceNumber:[\"\",Validators.required],\r\n      totalPrice:[\"\",Validators.required],\r\n      quantity:[\"\",Validators.required],\r\n      comment:[\"\"],\r\n      buying:[Boolean],\r\n      selling:[Boolean],\r\n    });\r\n  }\r\n\r\n\r\n  //view\r\n  view(){\r\n    this.SupplerService.viewSupplerInvoice().subscribe(\r\n      (res)=>{\r\n        this.obj = res['data'];\r\n        console.log(res);\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n  //laod Artical Category\r\n  LoadArticalCategory(){\r\n    this.SupplerService.LoadArticalCategory().subscribe(\r\n      (res)=>{\r\n        this.articalCategory = res[\"data\"];\r\n        console.log(this.articalCategory);\r\n      });\r\n  }\r\n\r\n    //laod Artical \r\n    LoadArtical(){\r\n      this.SupplerService.LoadArtical().subscribe(\r\n        (res)=>{\r\n          this.artical = res[\"data\"];\r\n          console.log(this.artical);\r\n        });\r\n    }\r\n\r\n    //Load Suppler\r\n    LoadSuppler(){\r\n      this.SupplerService.LoadSuppler().subscribe(\r\n        (res)=>{\r\n          this.suppler = res[\"data\"];\r\n          console.log(this.suppler);\r\n        }\r\n      )\r\n    }\r\n\r\n  //add\r\n  add(){\r\n\r\n    this.submitted = true;\r\n    if (this.SupplerInvoice.invalid) {\r\n         return;\r\n       }\r\n\r\n    const _add = {\r\n      articalCategoryname:this.articalCategoryname,\r\n      articalname:this.articalname,\r\n      supplername:this.supplername,\r\n      orderNumber:this.orderNumber,\r\n      invoiceNumber:this.invoiceNumber,\r\n      totalPrice:this.totalPrice,\r\n      quantity:this.quantity,\r\n      comment:this.comment,\r\n      buying:this.buying,\r\n      selling:this.selling\r\n    }\r\n    this.SupplerService.AddSupplerInvoice(_add).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n//delete\r\n  delete(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n    this.SupplerService.DeleteSupplerInvoice(del).subscribe(\r\n      (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n//Active\r\n  Active(_activeID){\r\n    const del = {_id:_activeID};\r\n\r\n    this.SupplerService.ActiveSupplerInvoice(del).subscribe(\r\n      (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n//get value from\r\nget up(){\r\n  return this.updateSupplerInvoice.controls;\r\n}\r\n \r\ncloseModel(){\r\n  this.submitted = false;\r\n  this.closebutton.nativeElement.click();\r\n}\r\n //update validator\r\n updateValidator(){\r\n  this.updateSupplerInvoice = this.formBuilder.group({\r\n    updatearticalCategoryname:[\"\",Validators.required],\r\n    updatearticalname:[\"\",Validators.required],\r\n    updatesupplername:[\"\",Validators.required],\r\n    updateorderNumber:[\"\",Validators.required],\r\n    updateinvoiceNumber:[\"\",Validators.required],\r\n    updatetotalPrice:[Number,Validators.required],\r\n    updatequantity:[Number,Validators.required],\r\n    updatebuying:[Boolean],\r\n    updateselling:[Boolean],\r\n    updatecomment:[\"\"],\r\n  });\r\n}\r\n \r\n\r\n //data bound to value\r\n bind(){\r\n  this.updatearticalCategoryname = this.articalCategoryname;\r\n  this.updatearticalname = this.articalname;\r\n  this.updatesupplername = this.supplername;\r\n  this.updateorderNumber = this.orderNumber;\r\n  this.updateinvoiceNumber = this.invoiceNumber;\r\n  this.updatetotalPrice = this.totalPrice;\r\n  this.updatequantity = this.quantity;\r\n  this.updatecomment = this.comment;\r\n  this.updatebuying = this.buying;\r\n  this.updateselling = this.selling;\r\n  this.unbind();\r\n} \r\n\r\nunbind(){\r\n    this.articalCategoryname = null;\r\n    this.articalname = null;\r\n    this.supplername = null;\r\n    this.orderNumber = null;\r\n    this.invoiceNumber = null;\r\n    this.totalPrice = null;\r\n    this.quantity = null;\r\n    this.comment = null;\r\n    this.buying = null;\r\n    this.selling = null;\r\n} \r\n//set  update model\r\nUpdate(data){\r\n   this._id                 = data['_id'];\r\n   this.articalCategoryname = data['articalCategoryname'];\r\n   this.articalname         = data['articalname'];\r\n   this.supplername         = data[\"supplername\"]\r\n   this.orderNumber         = data['orderNumber'];\r\n   this.invoiceNumber       = data['invoiceNumber'];\r\n   this.totalPrice          = data['totalPrice'];\r\n   this.quantity            = data['quantity'];\r\n   this.comment             = data['comment'];\r\n   this.buying              = data['buying'];\r\n   this.selling             = data['selling'];\r\n   this.bind();\r\n}\r\n\r\n// modal to data service\r\nonUpdate(){\r\n\r\n\r\n  this.submitted = true;\r\n  if (this.updateSupplerInvoice.invalid) {\r\n        return;\r\n     }\r\n\r\n  const data = {\r\n        _id                :this._id,\r\n        articalCategoryname:this.updatearticalCategoryname,\r\n        articalname        :this.updatearticalname,\r\n        supplername        :this.updatesupplername,\r\n        orderNumber        :this.updateorderNumber,\r\n        invoiceNumber      :this.updateinvoiceNumber,\r\n        totalPrice         :this.updatetotalPrice,\r\n        quantity           :this.updatequantity,\r\n        comment            :this.updatecomment,\r\n        buying             :this.updatebuying,\r\n        selling            :this.updateselling,\r\n    \r\n   }\r\n\r\n  this.resetForm();\r\n   this.closeModel();\r\n  this.SupplerService.UpdateSupplerInvoice(data).subscribe(\r\n    (res)=>{\r\n      if(res['status']){\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n       }\r\n      else{\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n       }\r\n       \r\n       this.resetForm();\r\n       this.view(); \r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n }\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Suppler Invoice</h2>\r\n<br><br>\r\n\r\n<div class=\"container\">\r\n    <form action=\"\"  [formGroup] = \"SupplerInvoice\" (submit) =\"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Artical Category</label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"articalCategoryname\" name=\"articalCategoryname\"  formControlName=\"articalCategoryname\"  [ngClass]=\"{ 'is-invalid': submitted && f.articalCategoryname.errors }\">\r\n                    <option *ngFor=\"let data of articalCategory\" [value] =\"data.categoryName\">{{data.categoryName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.articalCategoryname.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.articalCategoryname.errors.required\">Artical Category  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Artical Name</label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"articalname\" name=\"articalname\"  formControlName=\"articalname\"  [ngClass]=\"{ 'is-invalid': submitted && f.articalname.errors }\">\r\n                    <option *ngFor=\"let data of artical\" [value] =\"data.articalName\">{{data.articalName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.articalname.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.articalname.errors.required\">Artical  Name  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Suppler</label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"supplername\" name=\"supplername\"  formControlName=\"supplername\"  [ngClass]=\"{ 'is-invalid': submitted && f.supplername.errors }\">\r\n                    <option *ngFor=\"let data of suppler\" [value] =\"data.name\">{{data.name}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.supplername.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.supplername.errors.required\">Suppler</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Bid ID/Order Number</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : 1212545\" name=\"orderNumber\" [(ngModel)]=\"orderNumber\" formControlName=\"orderNumber\" [ngClass]=\"{ 'is-invalid': submitted && f.orderNumber.errors }\">\r\n                <div *ngIf=\"submitted && f.orderNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.orderNumber.errors.required\">Bid ID/Order Number</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Invoice Number</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Mo4545\" name=\"invoiceNumber\" [(ngModel)]=\"invoiceNumber\" formControlName=\"invoiceNumber\"[ngClass]=\"{ 'is-invalid': submitted && f.invoiceNumber.errors }\">\r\n                <div *ngIf=\"submitted && f.invoiceNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.invoiceNumber.errors.required\">Invoice Number is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Total Price</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 120 000.00\" min=\"0\" name=\"totalPrice\" [(ngModel)]=\"totalPrice\" formControlName=\"totalPrice\" [ngClass]=\"{ 'is-invalid': submitted && f.totalPrice.errors }\">\r\n                <div *ngIf=\"submitted && f.totalPrice.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.totalPrice.errors.required\">Total Price  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Quantity</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 12\" min=\"0\"  name=\"quantity\" [(ngModel)]=\"quantity\" formControlName=\"quantity\" [ngClass]=\"{ 'is-invalid': submitted && f.quantity.errors }\">\r\n                <div *ngIf=\"submitted && f.quantity.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.quantity.errors.required\">Quantity is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Comments</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea name=\"\" class=\"form-control\" id=\"\"  rows=\"3\" [(ngModel)]=\"comment\" name=\"comment\" formControlName=\"comment\" ></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"form-check tab-space\">\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"buying\" name=\"buying\" formControlName=\"buying\">\r\n                <label class=\"form-check-lable\" >Buying</label>   \r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-3 form-check tab-space\">\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"selling\" name=\"selling\" formControlName=\"selling\">\r\n                <label class=\"form-check-lable\">Selling</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n    <br>\r\n    <flash-messages></flash-messages>\r\n    <br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Artical Category</th>\r\n            <th scope=\"col\">Artical Name</th>\r\n            <th scope=\"col\">Suppler</th>\r\n            <th scope=\"col\">Bid ID/Order Number</th>\r\n            <th scope=\"col\">Invoice Number</th>\r\n            <th scope=\"col\">Total Price</th>\r\n            <th scope=\"col\">Quantity</th>\r\n            <th scope=\"col\">Comments</th>\r\n            <th scope=\"col\">Buying</th>\r\n            <th scope=\"col\">Selling</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of obj;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.articalCategoryname}}</td>\r\n            <td>{{data.articalname}}</td>\r\n            <td>{{data.supplername}}</td>\r\n            <td>{{data.orderNumber}}</td>\r\n            <td>{{data.invoiceNumber}}</td>\r\n            <td>{{data.totalPrice}}</td>\r\n            <td>{{data.quantity}}</td>\r\n            <td>{{data.comment}}</td>\r\n            <td>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"data.buying\" name=\"buying\" >\r\n            </td>      \r\n            <td>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"checkbox\" class=\"form-check-input\"  [(ngModel)]=\"data.selling\" name=\"selling\" >\r\n            </td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"delete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"Active(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Suppler Invoice  Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updateSupplerInvoice\">\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Artical Category Name </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{articalCategoryname}}\" name=\"updatearticalCategoryname\" [(ngModel)]=\"updatearticalCategoryname\"  formControlName=\"updatearticalCategoryname\" [ngClass]=\"{ 'is-invalid': submitted && up.updatearticalCategoryname.errors }\">\r\n                    <option *ngFor=\"let data of articalCategory\" [value] =\"data.categoryName\">{{data.categoryName}}</option>\r\n                </select>\r\n                 <div *ngIf=\"submitted && up.updatearticalCategoryname.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatearticalCategoryname.errors.required\"> Artical Category Name is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Artical Name </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{articalname}}\" name=\"updatearticalname\" [(ngModel)]=\"updatearticalname\"  formControlName=\"updatearticalname\" [ngClass]=\"{ 'is-invalid': submitted && up.updatearticalname.errors }\">\r\n                    <option *ngFor=\"let data of artical\" [value] =\"data.articalName\">{{data.articalName}}</option>\r\n                </select>\r\n                 <div *ngIf=\"submitted && up.updatearticalname.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatearticalname.errors.required\"> Artical  Name is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Suppler  </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{supplername}}\" name=\"updatesupplername\" [(ngModel)]=\"updatesupplername\"  formControlName=\"updatesupplername\" [ngClass]=\"{ 'is-invalid': submitted && up.updatesupplername.errors }\">\r\n                    <option *ngFor=\"let data of suppler\" [value] =\"data.name\">{{data.name}}</option>\r\n                </select>\r\n                 <div *ngIf=\"submitted && up.updatesupplername.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatesupplername.errors.required\"> Suppler is required</div>\r\n                 </div>\r\n              </div>\r\n\r\n            <div class=\"form-group\" >\r\n              <label for=\"name\" class=\"col-form-label\"> Bid ID/Order Number </label>\r\n              <input type=\"text\" class=\"form-control\"  value=\"{{orderNumber}}\" name=\"updateorderNumber\" [(ngModel)]=\"updateorderNumber\"  formControlName=\"updateorderNumber\" [ngClass]=\"{ 'is-invalid': submitted && up.updateorderNumber.errors }\">\r\n              <div *ngIf=\"submitted && up.updateorderNumber.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updateorderNumber.errors.required\"> Bid ID/Order Number  is required</div>\r\n               </div>\r\n            </div>\r\n            \r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Invoice Number </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{invoiceNumber}}\" name=\"updateinvoiceNumber\" [(ngModel)]=\"updateinvoiceNumber\"  formControlName=\"updateinvoiceNumber\" [ngClass]=\"{ 'is-invalid': submitted && up.updateinvoiceNumber.errors }\">\r\n                <div *ngIf=\"submitted && up.updateinvoiceNumber.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateinvoiceNumber.errors.required\">Invoice Number is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">  Total Price </label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{totalPrice}}\" name=\"updatetotalPrice\" [(ngModel)]=\"updatetotalPrice\"  formControlName=\"updatetotalPrice\" [ngClass]=\"{ 'is-invalid': submitted && up.updatetotalPrice.errors }\">\r\n                <div *ngIf=\"submitted && up.updatetotalPrice.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatetotalPrice.errors.required\"> Total Price  is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">  Quantity </label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{quantity}}\" name=\"updatequantity\" [(ngModel)]=\"updatequantity\"  formControlName=\"updatequantity\" [ngClass]=\"{ 'is-invalid': submitted && up.updatequantity.errors }\">\r\n                <div *ngIf=\"submitted && up.updatequantity.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatequantity.errors.required\"> Quantity is required</div>\r\n                 </div>\r\n              </div> \r\n              <div class=\"form-group\" >\r\n                <div class=\"form-check tab-space\">\r\n                    <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"updatebuying\"  [checked]=\"buying\" name=\"updatebuying\"  formControlName=\"updatebuying\" >\r\n                    <label class=\"form-check-lable\" >Buying</label>   \r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <div class=\"form-check tab-space\">\r\n                    <input type=\"checkbox\" class=\"form-check-input \" [(ngModel)]=\"updateselling\"  [checked]=\"selling\" name=\"updateselling\"  formControlName=\"updateselling\" >\r\n                    <label class=\"form-check-lable\" >Selling</label>   \r\n                </div>\r\n              </div>   \r\n               <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Comments </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{comment}}\" name=\"updatecomment\" [(ngModel)]=\"updatecomment\"  formControlName=\"updatecomment\" ></textarea>\r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-suppler',\r\n  templateUrl: './suppler.component.html',\r\n  styleUrls: ['./suppler.component.scss']\r\n})\r\nexport class SupplerComponent implements OnInit {\r\n\r\n  supplerform:FormGroup;\r\n  submitted:boolean;\r\n  productname:any;\r\n  product:any;\r\n  details:any;\r\n  name:any;\r\n  street:any;\r\n  city:any;\r\n  telephone:number;\r\n  mobile:number;\r\n  email:string;\r\n  regNo:any;\r\n  obj:any;\r\n  _id:any;\r\n updatesupplerform:FormGroup;\r\n updateproductname:any;\r\n updatedetails:any;\r\n updatename:any;\r\n updatestreet:any;\r\n updatecity:any;\r\n updatetelephone:number;\r\n updatemobile:number;\r\n updateemail:string;\r\n updateregNo:any;\r\n @ViewChild('closebutton') closebutton;\r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }      \r\n\r\n  ngOnInit(): void {\r\n    this.view();\r\n    this.validator();\r\n    this.loadProduct();\r\n    this.updateValidator();\r\n  }\r\n\r\n\r\n  //Load Product\r\n  loadProduct(){\r\n    this.supplerService.ProductLoad().subscribe(\r\n        (res)=>{\r\n          this.product = res[\"data\"];\r\n          console.log(this.product);\r\n        }\r\n    );\r\n  }\r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.supplerform.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.supplerform.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.supplerform = this.formBuilder.group({\r\n    productname:[\"\",Validators.required],\r\n    details:[\"\"],\r\n    name:[\"\",Validators.required],\r\n    street:[\"\",Validators.required],\r\n    city:[\"\",Validators.required],\r\n    telephone:[\"\",Validators.required],\r\n    mobile:[\"\",Validators.required],\r\n    email:[\"\",Validators.required],\r\n    regNo:[\"\",Validators.required],\r\n  });\r\n}\r\n\r\n  //view\r\n  view(){\r\n      this.supplerService.viewSuppler().subscribe(\r\n        (res)=>{\r\n          this.obj = res['data'];\r\n          console.log(res);\r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  //add \r\n  add(){\r\n\r\n      this.submitted = true;\r\n      if (this.supplerform.invalid) {\r\n        return;\r\n        }\r\n\r\n    const suppler = {\r\n      productname:this.productname,\r\n      details:this.details,\r\n      name:this.name,\r\n      street:this.street,\r\n      city:this.city,\r\n      telephone:this.telephone,\r\n      mobile:this.mobile,\r\n      email:this.email,\r\n      regNo:this.regNo\r\n    }\r\n    console.log(suppler);\r\n\r\n    this.supplerService.AddSuppler(suppler).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //delete\r\n  delete(_deleteID){\r\n\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.DeleteSuppler(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  //Active\r\n  Active(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.ActiveSuppler(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n \r\n//get value from\r\nget up(){\r\n  return this.updatesupplerform.controls;\r\n}\r\n \r\ncloseModel(){\r\n  this.submitted = false;\r\n  this.closebutton.nativeElement.click();\r\n}\r\n //update validator\r\n updateValidator(){\r\n  this.updatesupplerform = this.formBuilder.group({\r\n    updateproductname:[\"\",Validators.required],\r\n    updatename:[\"\",Validators.required],\r\n    updatestreet:[\"\",Validators.required],\r\n    updatecity:[\"\",Validators.required],\r\n    updatetelephone:[\"\",Validators.required],\r\n    updatemobile:[\"\",Validators.required],\r\n    updateemail:[\"\",Validators.required],\r\n    updateregNo:[\"\",Validators.required],\r\n    updatedetails:[\"\"]\r\n  });\r\n}\r\n\r\n\r\n  //data bound to value\r\n  bind(){\r\n    this.updateproductname = this.productname;\r\n    this.updatename = this.name;\r\n    this.updatestreet = this.street;\r\n    this.updatecity = this.city;\r\n    this.updatetelephone = this.telephone;\r\n    this.updatemobile = this.mobile;\r\n    this.updateemail = this.email;\r\n    this.updateregNo = this.regNo;\r\n    this.updatedetails = this.details;\r\n    this.unbind();\r\n  }\r\n\r\n  unbind(){\r\n     this.productname = null;\r\n     this.name = null;\r\n     this.street = null;\r\n     this.city = null;\r\n     this.telephone = null;\r\n     this.mobile = null;\r\n     this.email = null;\r\n     this.regNo = null;\r\n     this.details = null;\r\n\r\n  }\r\n//set  update model\r\nUpdate(data){\r\n   this._id         = data['_id'];\r\n   this.productname = data['productname'];\r\n   this.name        = data['name'];\r\n   this.street      = data[\"street\"]\r\n   this.city        = data['city'];\r\n   this.telephone   = data['telephone'];\r\n   this.mobile      = data['mobile'];\r\n   this.email       = data['email'];\r\n   this.regNo       = data['regNo'];\r\n   this.details     = data['details'];\r\n   this.bind();\r\n}\r\n\r\n// modal to data service\r\nonUpdate(){\r\n\r\n\r\n  this.submitted = true;\r\n  if (this.updatesupplerform.invalid) {\r\n        return;\r\n     }\r\n     \r\n  const data = {\r\n    _id        :this._id,\r\n    productname:this.updateproductname,\r\n    name       :this.updatename,\r\n    street     :this.updatestreet,\r\n    city       :this.updatecity,\r\n    telephone  :this.updatetelephone,\r\n    mobile     :this.updatemobile,\r\n    email      :this.updateemail,\r\n    regNo      :this.updateregNo,\r\n    details    :this.updatedetails,\r\n \r\n  }\r\n\r\n  this.resetForm();\r\n   this.closeModel();\r\n  this.supplerService.UpdateSuppler(data).subscribe(\r\n    (res)=>{\r\n      if(res['status']){\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n       }\r\n      else{\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n       }\r\n       \r\n       this.resetForm();\r\n       this.view(); \r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n }\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Suppler</h2>\r\n<br><br>\r\n\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"supplerform\" (submit)= \"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Product</label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"productname\" name=\"productname\"  formControlName=\"productname\"  [ngClass]=\"{ 'is-invalid': submitted && f.productname.errors }\">\r\n                    <option *ngFor=\"let data of product\" [value] =\"data.productName\">{{data.productName}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.productname.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.productname.errors.required\">Product  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Details</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea name=\"\" class=\"form-control\" id=\"\"  rows=\"3\"  [(ngModel)]=\"details\" name=\"details\"  formControlName=\"details\"></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Name</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Lahiru Tea exports\" name=\"name\" [(ngModel)]=\"name\" formControlName=\"name\"  [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" >\r\n                <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.name.errors.required\"> Name  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Street </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : 1st street\" name=\"street\" [(ngModel)]=\"street\"  formControlName=\"street\" [ngClass]=\"{ 'is-invalid': submitted && f.street.errors }\">\r\n                <div *ngIf=\"submitted && f.street.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.street.errors.required\">Street is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">City</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Colombo\"  name=\"city\" [(ngModel)]=\"city\" formControlName=\"city\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\">\r\n                <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.city.errors.required\">City  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Telephone Number</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : 021 2 222 222\"   name=\"telephone\" [(ngModel)]=\"telephone\" formControlName=\"telephone\" [ngClass]=\"{ 'is-invalid': submitted && f.telephone.errors }\">\r\n                <div *ngIf=\"submitted && f.telephone.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.telephone.errors.required\">Telephone Number  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Mobile Number</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : 071 2 222 222\" name=\"mobile\" [(ngModel)]=\"mobile\"  formControlName=\"mobile\" [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\">\r\n                <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.mobile.errors.required\">Mobile Number  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Email</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : tea@gmail.com\"  name=\"email\" [(ngModel)]=\"email\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Reg No</label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Re122Px\"  name=\"regNo\" [(ngModel)]=\"regNo\" formControlName=\"regNo\" [ngClass]=\"{ 'is-invalid': submitted && f.regNo.errors }\">\r\n                <div *ngIf=\"submitted && f.regNo.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.regNo.errors.required\">Reg No is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br>\r\n    <flash-messages></flash-messages>\r\n    <br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Product</th>\r\n            <th scope=\"col\">Details</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Street</th>\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">Telephone Number</th>\r\n            <th scope=\"col\">Mobile Number</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Reg No</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of obj;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.productname}}</td>\r\n            <td>{{data.details}}</td>\r\n            <td>{{data.name}}</td>\r\n            <td>{{data.street}}</td>\r\n            <td>{{data.city}}</td>\r\n            <td>{{data.telephone}}</td>\r\n            <td>{{data.mobile}}</td>\r\n            <td>{{data.email}}</td>\r\n            <td>{{data.regNo}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"delete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"Active(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table> \r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Suppler  Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updatesupplerform\">\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Product Name </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{productname}}\" name=\"updateproductname\" [(ngModel)]=\"updateproductname\"  formControlName=\"updateproductname\" [ngClass]=\"{ 'is-invalid': submitted && up.updateproductname.errors }\">\r\n                    <option *ngFor=\"let data of product\" [value] =\"data.productName\">{{data.productName}}</option>\r\n                </select>\r\n                 <div *ngIf=\"submitted && up.updateproductname.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateproductname.errors.required\"> Product Name is required</div>\r\n                 </div>\r\n              </div>\r\n            <div class=\"form-group\" >\r\n              <label for=\"name\" class=\"col-form-label\"> Name</label>\r\n              <input type=\"text\" class=\"form-control\"  value=\"{{name}}\" name=\"updatename\" [(ngModel)]=\"updatename\"  formControlName=\"updatename\" [ngClass]=\"{ 'is-invalid': submitted && up.updatename.errors }\">\r\n              <div *ngIf=\"submitted && up.updatename.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updatename.errors.required\"> Name  is required</div>\r\n               </div>\r\n            </div>\r\n            \r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Street </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{street}}\" name=\"updatestreet\" [(ngModel)]=\"updatestreet\"  formControlName=\"updatestreet\" [ngClass]=\"{ 'is-invalid': submitted && up.updatestreet.errors }\">\r\n                <div *ngIf=\"submitted && up.updatestreet.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatestreet.errors.required\">Street is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">  City </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{city}}\" name=\"updatecity\" [(ngModel)]=\"updatecity\"  formControlName=\"updatecity\" [ngClass]=\"{ 'is-invalid': submitted && up.updatecity.errors }\">\r\n                <div *ngIf=\"submitted && up.updatecity.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatecity.errors.required\"> City is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">  Telephone </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{telephone}}\" name=\"updatetelephone\" [(ngModel)]=\"updatetelephone\"  formControlName=\"updatetelephone\" [ngClass]=\"{ 'is-invalid': submitted && up.updatetelephone.errors }\">\r\n                <div *ngIf=\"submitted && up.updatetelephone.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatetelephone.errors.required\"> Telephone is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Mobile  </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{mobile}}\" name=\"updatemobile\" [(ngModel)]=\"updatemobile\"  formControlName=\"updatemobile\" [ngClass]=\"{ 'is-invalid': submitted && up.updatemobile.errors }\">\r\n                <div *ngIf=\"submitted && up.updatemobile.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updatemobile.errors.required\"> Mobile is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Email </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{email}}\" name=\"updateemail\" [(ngModel)]=\"updateemail\"  formControlName=\"updateemail\" [ngClass]=\"{ 'is-invalid': submitted && up.updateemail.errors }\">\r\n                <div *ngIf=\"submitted && up.updateemail.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateemail.errors.required\"> Email is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> RegNo </label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{regNo}}\" name=\"updateregNo\" [(ngModel)]=\"updateregNo\"  formControlName=\"updateregNo\" [ngClass]=\"{ 'is-invalid': submitted && up.updateregNo.errors }\">\r\n                <div *ngIf=\"submitted && up.updateregNo.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateregNo.errors.required\"> RegNo is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Details </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{details}}\" name=\"updatedetails\" [(ngModel)]=\"updatedetails\"  formControlName=\"updatedetails\" ></textarea>\r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-transport-expence-type',\r\n  templateUrl: './transport-expence-type.component.html',\r\n  styleUrls: ['./transport-expence-type.component.scss']\r\n})\r\nexport class TransportExpenceTypeComponent implements OnInit {\r\n\r\n  \r\n  transportExpences:FormGroup;\r\n  submitted:boolean;\r\n  TransportExpencesType:any;\r\n  exprencedata:any;\r\n  _id:any;\r\n  updateTransportExpences:FormGroup;\r\n  updateTransportExpencesType:any;\r\n  @ViewChild('closebutton') closebutton;\r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.view();\r\n    this.updateValidator();\r\n  }\r\n  \r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.transportExpences.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.transportExpences.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.transportExpences = this.formBuilder.group({\r\n    TransportExpencesType:[\"\",Validators.required],\r\n    });\r\n   }\r\n\r\n   //view\r\n view(){\r\n  this.supplerService.viewTransportExpenceType().subscribe(\r\n    (res)=>{\r\n      this.exprencedata = res['data'];\r\n      console.log(res);\r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n\r\n }\r\n  \r\n //add\r\n  add(){\r\n    this.submitted = true;\r\n    if (this.transportExpences.invalid) {\r\n       return;\r\n      }\r\n      const adddata = {\r\n        TransportExpencesType:this.TransportExpencesType\r\n      }\r\n      this.supplerService.AddTransportExpenceType(adddata).subscribe(\r\n        (res)=>{\r\n          if(res['status']){\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n           }\r\n          else{\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n           }\r\n           \r\n          this.resetForm();\r\n           this.view(); \r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n  //delete\r\n  onDelete(_deleteID){\r\n\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.DeleteTransportExpenceType(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  //Active\r\n  onActive(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.ActiveTransportExpenceType(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n\r\n   //get value from\r\n   get up(){\r\n    return this.updateTransportExpences.controls;\r\n  }\r\n   \r\n  closeModel(){\r\n    this.closebutton.nativeElement.click();\r\n  }\r\n   //update validator\r\n   updateValidator(){\r\n    this.updateTransportExpences = this.formBuilder.group({\r\n      updateTransportExpencesType:[\"\",Validators.required]\r\n    });\r\n  }\r\n\r\n   //data bound to value\r\n   bind(){\r\n    this.updateTransportExpencesType = this.TransportExpencesType;\r\n    this.unbind();\r\n  }\r\n\r\n  unbind(){\r\n    this.TransportExpencesType = null;\r\n  }\r\n\r\n//set  update model\r\n  Update(data){\r\n     this.TransportExpencesType = data['TransportExpencesType'];\r\n     this._id = data['_id'];\r\n     this.bind();\r\n  }\r\n\r\n  //set the modal to data\r\n  onUpdate(){\r\n  \r\n    this.submitted = true;\r\n    if (this.updateTransportExpences.invalid) {\r\n      return;\r\n       }\r\n\r\n    const data = {\r\n      TransportExpencesType :this.updateTransportExpencesType,\r\n       _id:this._id\r\n    }\r\n    \r\n     this.closeModel();\r\n    this.supplerService.UpdateTransportExpenceType(data).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Transport Expences Type</h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"transportExpences\" (submit)= \"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Expences Type </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Fuel\" name=\"TransportExpencesType\" [(ngModel)]=\"TransportExpencesType\"  formControlName=\"TransportExpencesType\" [ngClass]=\"{ 'is-invalid': submitted && f.TransportExpencesType.errors }\">\r\n                <div *ngIf=\"submitted && f.TransportExpencesType.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.TransportExpencesType.errors.required\">Expences  Type is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">ExpenceType Name</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of exprencedata;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.TransportExpencesType}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Transport Expences Type Update</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form (submit) = \"onUpdate()\" [formGroup] = \"updateTransportExpences\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient-name\" class=\"col-form-label\">Expences Type </label>\r\n            <input type=\"text\" class=\"form-control\"  value=\"{{TransportExpencesType}}\" name=\"updateTransportExpencesType\" [(ngModel)]=\"updateTransportExpencesType\"  formControlName=\"updateTransportExpencesType\" [ngClass]=\"{ 'is-invalid': submitted && up.updateTransportExpencesType.errors }\">\r\n            <div *ngIf=\"submitted && up.updateTransportExpencesType.errors\" class=\"invalid-feedback\">\r\n               <div *ngIf=\"up.updateTransportExpencesType.errors.required\">Expences Type   is required</div>\r\n             </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-transport-expence',\r\n  templateUrl: './transport-expence.component.html',\r\n  styleUrls: ['./transport-expence.component.scss']\r\n})\r\nexport class TransportExpenceComponent implements OnInit {\r\n\r\n  expences:FormGroup;\r\n  submitted:boolean;\r\n  ExpencesType:any;\r\n  vehical:any;\r\n  date:Date;\r\n  cost:any;\r\n  description:any;\r\n  comment:any;\r\n  exprencedata:any;\r\n  vahicaldata:any;\r\n  _id:any;\r\n  expenceTypedata:any;\r\n  updateExpences:FormGroup;\r\n  updateExpencesType:any;\r\n  updateVehical:any;\r\n  updateDate:Date;\r\n  updateCost:any;\r\n  updateDescription:any;\r\n  updateComment:any;\r\n  @ViewChild('closebutton') closebutton;\r\n  \r\n\r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.view();\r\n    this.LoadExpenceType();\r\n    this.LoadvehicalType();\r\n    this.updateValidator();\r\n  }\r\n\r\n\r\n  \r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.expences.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.expences.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.expences = this.formBuilder.group({\r\n      ExpencesType:[\"\",Validators.required],\r\n      date:[Date,Validators.required],\r\n      vehical:[\"\",Validators.required],\r\n      cost:[Number,Validators.required],\r\n      description:[\"\"],\r\n      comment:[\"\"]\r\n    });\r\n   }\r\n\r\n   //Load Expence Type\r\n   LoadExpenceType(){\r\n      this.supplerService.LoadExpenceType().subscribe(\r\n        (res)=>{\r\n          this.expenceTypedata = res[\"data\"];\r\n          console.log(this.expenceTypedata);\r\n        }\r\n      )\r\n   }\r\n\r\n   //Load vehical Type\r\n   LoadvehicalType(){\r\n    this.supplerService.Loadvehical().subscribe(\r\n      (res)=>{\r\n        this.vahicaldata = res[\"data\"];\r\n        console.log(this.expenceTypedata);\r\n      }\r\n    )\r\n }\r\n   //view\r\n view(){\r\n  this.supplerService.viewtransportExpence().subscribe(\r\n    (res)=>{\r\n      this.exprencedata = res['data'];\r\n      console.log(res);\r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n\r\n }\r\n  \r\n //add\r\n  add(){\r\n    this.submitted = true;\r\n    if (this.expences.invalid) {\r\n       return;\r\n      }\r\n      const adddata = {\r\n        date:this.date,\r\n        ExpencesType:this.ExpencesType,\r\n        vehical:this.vehical,\r\n        cost:this.cost,\r\n        comment:this.comment,\r\n        description:this.description\r\n      }\r\n      console.log(adddata);\r\n      this.supplerService.AddtransportExpence(adddata).subscribe(\r\n        (res)=>{\r\n          if(res['status']){\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n           }\r\n          else{\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n           }\r\n           \r\n          this.resetForm();\r\n           this.view(); \r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n  //delete\r\n  onDelete(_deleteID){\r\n\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.DeletetransportExpence(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  //Active\r\n  onActive(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.ActivetransportExpence(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n\r\n\r\n//get value from\r\nget up(){\r\n  return this.updateExpences.controls;\r\n}\r\n \r\ncloseModel(){\r\n  this.submitted = false;\r\n  this.closebutton.nativeElement.click();\r\n}\r\n //update validator\r\n updateValidator(){\r\n  this.updateExpences = this.formBuilder.group({\r\n    updateExpencesType:[\"\",Validators.required],\r\n    updateVehical:[\"\",Validators.required],\r\n    updateDate:[Date,Validators.required],\r\n    updateCost:[Number,Validators.required],\r\n    updateDescription:[\"\"],\r\n    updateComment:[\"\"]\r\n  });\r\n}\r\n\r\n //data bound to value\r\n bind(){\r\n  this.updateExpencesType = this.ExpencesType;\r\n  this.updateVehical = this.vehical;\r\n  this.updateDate = this.date;\r\n  this.updateCost = this.cost;\r\n  this.updateDescription = this.description;\r\n  this.updateComment = this.comment;\r\n  this.unbind();\r\n}\r\n\r\nunbind(){\r\n  this.ExpencesType = null;\r\n  this.vehical = null;\r\n  this.date = null;\r\n  this.cost = null;\r\n  this.description = null;\r\n  this.comment = null;\r\n}\r\n\r\n//set  update model\r\nUpdate(data){\r\n   this.ExpencesType = data['ExpencesType'];\r\n   this.vehical = data['vehical'];\r\n  // this.date = data['date']\r\n   this._id = data['_id'];\r\n   this.cost = data['cost'];\r\n   this.description = data['description'];\r\n   this.comment = data['comment'];\r\n   this.bind();\r\n}\r\n\r\n// modal to data service\r\nonUpdate(){\r\n\r\n  this.submitted = true;\r\n  if (this.updateExpences.invalid) {\r\n    return;\r\n     }\r\n\r\n  const data = {\r\n    _id:this._id,\r\n    ExpencesType:this.updateExpencesType,\r\n    vehical:this.updateVehical,\r\n    date:this.updateDate,\r\n    cost:this.updateCost,\r\n    description:this.updateDescription,\r\n    comment:this.updateComment\r\n \r\n  }\r\n console.log(data);\r\n   this.closeModel();\r\n  this.supplerService.UpdatetransportExpence(data).subscribe(\r\n    (res)=>{\r\n      if(res['status']){\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n       }\r\n      else{\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n       }\r\n       \r\n       this.resetForm();\r\n       this.view(); \r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n}\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Trasport Expences </h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form [formGroup] = \"expences\" (submit)= \"add()\" action=\"\">\r\n\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Date </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"date\" class=\"form-control\" placeholder=\"\" name=\"date\" [(ngModel)]=\"date\"  formControlName=\"date\" [ngClass]=\"{ 'is-invalid': submitted && f.date.errors }\">\r\n                <div *ngIf=\"submitted && f.date.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.date.errors.required\">Date is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Expences Type </label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"ExpencesType\" name=\"ExpencesType\"  formControlName=\"ExpencesType\"  [ngClass]=\"{ 'is-invalid': submitted && f.ExpencesType.errors }\">\r\n                    <option *ngFor=\"let data of expenceTypedata\" [value] =\"data.ExpencesType\">{{data.ExpencesType}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.ExpencesType.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.ExpencesType.errors.required\">ExpencesType is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Vehical Type </label>\r\n            <div class=\"col-sm-8\">\r\n                <select type=\"text\" class=\"form-control\"   [(ngModel)]=\"vehical\" name=\"vehical\"  formControlName=\"vehical\"  [ngClass]=\"{ 'is-invalid': submitted && f.vehical.errors }\">\r\n                    <option *ngFor=\"let data of vahicaldata\" [value] =\"data.vehicleCategory\">{{data.vehicleCategory}} / {{data.vehicleNumber}}</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.vehical.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.vehical.errors.required\">Vehical type is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Cost </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"number\" class=\"form-control\" placeholder=\"Ex : 2000.00\" name=\"cost\" [(ngModel)]=\"cost\"  formControlName=\"cost\" [ngClass]=\"{ 'is-invalid': submitted && f.cost.errors }\">\r\n                <div *ngIf=\"submitted && f.cost.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.cost.errors.required\">Cost is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Description</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea  class=\"form-control\" id=\"\"  rows=\"3\"  [(ngModel)]=\"description\" name=\"description\"  formControlName=\"description\"></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Comment</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea class=\"form-control\" id=\"\"  rows=\"3\"  [(ngModel)]=\"comment\" name=\"comment\"  formControlName=\"comment\"></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Date </th>\r\n            <th scope=\"col\">ExpenceType </th>\r\n            <th scope=\"col\">Vehical </th>\r\n            <th scope=\"col\">Cost </th>\r\n            <th scope=\"col\">Description </th>\r\n            <th scope=\"col\">Comment </th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of exprencedata;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.date | date}}</td>\r\n            <td>{{data.ExpencesType}}</td>\r\n            <td>{{data.vehical}}</td>\r\n            <td>{{data.cost}}</td>\r\n            <td>{{data.description}}</td>\r\n            <td>{{data.comment}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Transport Expences Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updateExpences\">\r\n            <div class=\"form-group\" >\r\n              <label for=\"name\" class=\"col-form-label\">Date</label>\r\n              <input type=\"date\" class=\"form-control\"  value=\"{{date}}\" name=\"updateDate\" [(ngModel)]=\"updateDate\"  formControlName=\"updateDate\" [ngClass]=\"{ 'is-invalid': submitted && up.updateDate.errors }\">\r\n              <div *ngIf=\"submitted && up.updateDate.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updateDate.errors.required\">Date is required</div>\r\n               </div>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Expences Type </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{ExpencesType}}\" name=\"updateExpencesType\" [(ngModel)]=\"updateExpencesType\"  formControlName=\"updateExpencesType\" [ngClass]=\"{ 'is-invalid': submitted && up.updateExpencesType.errors }\">\r\n                    <option *ngFor=\"let data of expenceTypedata\" [value] =\"data.ExpencesType\">{{data.ExpencesType}}</option>\r\n                </select>\r\n              <div *ngIf=\"submitted && up.updateExpencesType.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateExpencesType.errors.required\">Expences Type  is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Vehical </label>\r\n                <select type=\"text\" class=\"form-control\"  value=\"{{vehical}}\" name=\"updateVehical\" [(ngModel)]=\"updateVehical\"  formControlName=\"updateVehical\" [ngClass]=\"{ 'is-invalid': submitted && up.updateVehical.errors }\">\r\n                    <option *ngFor=\"let data of vahicaldata\" [value] =\"data.vehicleCategory\">{{data.vehicleCategory}} / {{data.vehicleNumber}} </option>\r\n                </select>\r\n              <div *ngIf=\"submitted && up.updateVehical.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateVehical.errors.required\">Vehical is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\">Cost</label>\r\n                <input type=\"number\" class=\"form-control\"  value=\"{{cost}}\" name=\"updateCost\" [(ngModel)]=\"updateCost\"  formControlName=\"updateCost\" [ngClass]=\"{ 'is-invalid': submitted && up.updateCost.errors }\">\r\n                <div *ngIf=\"submitted && up.updateCost.errors\" class=\"invalid-feedback\">\r\n                   <div *ngIf=\"up.updateCost.errors.required\">Cost is required</div>\r\n                 </div>\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Description </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{description}}\" name=\"updateDescription\" [(ngModel)]=\"updateDescription\"  formControlName=\"updateDescription\" ></textarea>          \r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Comment </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{comment}}\" name=\"updateComment\" [(ngModel)]=\"updateComment\"  formControlName=\"updateComment\" ></textarea>          \r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-active',\r\n  templateUrl: './user-active.component.html',\r\n  styleUrls: ['./user-active.component.scss']\r\n})\r\nexport class UserActiveComponent implements OnInit {\r\n\r\n  constructor( private userService:UserService,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n        user:any;\r\n        \r\n  ngOnInit(): void {\r\n      this.view();\r\n  }\r\n\r\n  view(){\r\n    this.userService.viewUser().subscribe(\r\n      (res)=>{\r\n        this.user = res['data'];\r\n\r\n        console.log(this.user);\r\n      },\r\n      (err)=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  //delete\r\n  delete(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n    this.userService.DeleteUser(del).subscribe(\r\n      (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n//Active\r\n  Active(_activeID){\r\n    const del = {_id:_activeID};\r\n\r\n    this.userService.ActiveUser(del).subscribe(\r\n      (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  \r\n  //delete\r\n  UserAccept(id){\r\n    const accept = {_id:id};\r\n\r\n    this.userService.AcceptUser(accept).subscribe(\r\n      (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n//Active\r\nUserNonAccept(id){\r\n    const nonaccept = {_id:id};\r\n\r\n    this.userService.NonAcceptUser(nonaccept).subscribe(\r\n      (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Active / Deactive </h2>\r\n<br><br>\r\n\r\n<div class=\"container\">\r\n  <flash-messages></flash-messages>\r\n    <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Pisition</th>\r\n            <th scope=\"col\">State</th>\r\n            <th scope=\"col\">Accept</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of user;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.fname}}</td>\r\n            <td>{{data.lname}}</td>\r\n            <td>{{data.role}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"delete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"Active(data._id)\">Active</button></td>\r\n            </ng-template>  \r\n            <td>\r\n            <div *ngIf=\"data.status == 'Inactive'; else elseactive\" >\r\n              <button   type=\"button\" class=\"btn btn-success\" (click)=\"UserAccept(data._id)\">Accept</button>\r\n            </div>\r\n            <ng-template #elseactive>\r\n              <button   type=\"button\" class=\"btn btn-dark\" (click)=\"UserNonAccept(data._id)\">Non-Accept</button>\r\n            </ng-template>  \r\n          </td>\r\n           \r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n</div>\r\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { SupplerService } from '../_services/suppler.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-vehicle',\r\n  templateUrl: './vehicle.component.html',\r\n  styleUrls: ['./vehicle.component.scss']\r\n})\r\nexport class VehicleComponent implements OnInit {\r\n\r\n  vehicle:FormGroup;\r\n  comment:any;\r\n  submitted:boolean;\r\n  vehicleCategory:any;\r\n  vehicleNumber:any;\r\n  vehicledata:any;\r\n  _id:any;\r\n  updateVehicle:FormGroup;\r\n  updateVehicleCategory:any;\r\n  updateVehicleNumber:any;\r\n  updateComment:any;\r\n  @ViewChild('closebutton') closebutton;\r\n \r\n  constructor(public supplerService:SupplerService,\r\n              private formBuilder: FormBuilder,\r\n              private _flashMessagesService: FlashMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validator();\r\n    this.view();\r\n    this.updateValidator();\r\n  }\r\n\r\n  \r\n   //get value from\r\n   get f(){\r\n    return this.vehicle.controls;\r\n  }\r\n\r\n  // reset from\r\n  resetForm(){\r\n    this.submitted = false;   \r\n    this.vehicle.reset();\r\n  }\r\n\r\n  //validator\r\n  validator(){\r\n  this.vehicle = this.formBuilder.group({\r\n    vehicleCategory:[\"\",Validators.required],\r\n    vehicleNumber:[\"\"],\r\n    comment:[\"\"]\r\n\r\n    });\r\n   }\r\n\r\n   //view\r\n view(){\r\n  this.supplerService.viewvehical().subscribe(\r\n    (res)=>{\r\n      this.vehicledata = res['data'];\r\n      console.log(res);\r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    }\r\n  )\r\n\r\n }\r\n  \r\n //add\r\n  add(){\r\n    this.submitted = true;\r\n    if (this.vehicle.invalid) {\r\n       return;\r\n      }\r\n      const adddata = {\r\n        vehicleCategory:this.vehicleCategory,\r\n        vehicleNumber:this.vehicleNumber,\r\n        comment:this.comment\r\n      }\r\n      this.supplerService.Addvehical(adddata).subscribe(\r\n        (res)=>{\r\n          if(res['status']){\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n           }\r\n          else{\r\n            this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n           }\r\n           \r\n          this.resetForm();\r\n           this.view(); \r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n  //delete\r\n  onDelete(_deleteID){\r\n\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.Deletevehical(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-danger', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  //Active\r\n  onActive(_deleteID){\r\n    const del = {_id:_deleteID};\r\n\r\n     this.supplerService.Activevehical(del).subscribe(\r\n       (res)=>{\r\n        console.log(res);\r\n        this._flashMessagesService.show(res['msg'], { cssClass: 'alert-primary', timeout: 1200 });\r\n        this.view();\r\n       },\r\n       (err)=>{\r\n         console.log(err);\r\n       });\r\n  }\r\n\r\n  \r\n\r\n   //get value from\r\n   get up(){\r\n    return this.updateVehicle.controls;\r\n  }\r\n   \r\n  closeModel(){\r\n    this.closebutton.nativeElement.click();\r\n  }\r\n   //update validator\r\n   updateValidator(){\r\n    this.updateVehicle = this.formBuilder.group({\r\n      updateVehicleCategory:[\"\",Validators.required],\r\n      updateVehicleNumber:[\"\"],\r\n      updateComment:[\"\"]\r\n    });\r\n  }\r\n\r\n   //data bound to value\r\n   bind(){\r\n    this.updateVehicleCategory = this.vehicleCategory;\r\n    this.updateVehicleNumber = this.vehicleNumber;\r\n    this.updateComment = this.comment;\r\n    this.unbind();\r\n  }\r\n\r\n  unbind(){\r\n    this.vehicleCategory = null;\r\n    this.vehicleNumber = null;\r\n    this.comment = null;\r\n  }\r\n\r\n//set  update model\r\n  Update(data){\r\n     this.vehicleCategory = data['vehicleCategory'];\r\n     this.vehicleNumber = data['vehicleNumber'];\r\n     this.comment = data['comment'];\r\n     this._id = data['_id'];\r\n     this.bind();\r\n  }\r\n\r\n  //set the modal to data\r\n  onUpdate(){\r\n  \r\n    this.submitted = true;\r\n    if (this.updateVehicle.invalid) {\r\n      return;\r\n       }\r\n\r\n    const data = {\r\n      vehicleCategory :this.updateVehicleCategory,\r\n      vehicleNumber:this.updateVehicleNumber,\r\n      comment:this.updateComment,\r\n       _id:this._id\r\n    }\r\n    \r\n     this.closeModel();\r\n    this.supplerService.Updatevehical(data).subscribe(\r\n      (res)=>{\r\n        if(res['status']){\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-success', timeout: 1200 });\r\n         }\r\n        else{\r\n          this._flashMessagesService.show(res['msg'], { cssClass: 'alert-warning', timeout: 1200 });\r\n         }\r\n         \r\n        this.resetForm();\r\n         this.view(); \r\n      },\r\n      (err)=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar-rep></app-nav-bar-rep>\r\n<br><br><br>\r\n<h2 class=\"col-md-11 text-center\"> Vehicle </h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form action=\"\" [formGroup] = \"vehicle\" (submit)= \"add()\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Vehicle Category </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : Van\" name=\"vehicleCategory\" [(ngModel)]=\"vehicleCategory\"  formControlName=\"vehicleCategory\" [ngClass]=\"{ 'is-invalid': submitted && f.vehicleCategory.errors }\">\r\n                <div *ngIf=\"submitted && f.vehicleCategory.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.vehicleCategory.errors.required\">Vehicle Category  is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-lable\">Vehicle Number </label>\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ex : NB 8265\" name=\"vehicleNumber\" [(ngModel)]=\"vehicleNumber\"  formControlName=\"vehicleNumber\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class = \"col-sm-2 col-form-lable\">Comments</label>\r\n            <div class=\"col-sm-8\">\r\n                <textarea name=\"\" class=\"form-control\" id=\"\"  rows=\"3\" [(ngModel)]=\"comment\" name=\"comment\" formControlName=\"comment\" ></textarea>\r\n            </div>        \r\n        </div>\r\n        <div class=\"from-group row\">\r\n            <div class=\"col-sm-12 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <br><flash-messages></flash-messages><br>\r\n    <table class=\"table\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Vehicle Category</th>\r\n            <th scope=\"col\">Vehicle Number</th>\r\n            <th scope=\"col\">Comments</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Last Modification</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor = \"let data of vehicledata;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{data.vehicleCategory}}</td>\r\n            <td>{{data.vehicleNumber}}</td>\r\n            <td>{{data.comment}}</td>\r\n            <div *ngIf=\"!data.IsDeleted && data.ExpiryDate == null; else elseblock\" >\r\n              <td ><button   type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(data._id)\">Delete</button></td>\r\n            </div>\r\n            <ng-template #elseblock>\r\n              <td ><button   type=\"button\" class=\"btn btn-primary\" (click)=\"onActive(data._id)\">Active</button></td>\r\n            </ng-template>                \r\n            <td><button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click) = \"Update(data)\">Update</button></td>\r\n            <td>{{data.ModificationDate|date}}</td>\r\n          </tr>\r\n         </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Vehicle Update</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form (submit) = \"onUpdate()\" [formGroup] = \"updateVehicle\">\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Vehicle Category </label>\r\n              <input type=\"text\" class=\"form-control\"  value=\"{{vehicleCategory}}\" name=\"updateVehicleCategory\" [(ngModel)]=\"updateVehicleCategory\"  formControlName=\"updateVehicleCategory\" [ngClass]=\"{ 'is-invalid': submitted && up.updateVehicleCategory.errors }\">\r\n              <div *ngIf=\"submitted && up.updateVehicleCategory.errors\" class=\"invalid-feedback\">\r\n                 <div *ngIf=\"up.updateVehicleCategory.errors.required\">Vehicle Category   is required</div>\r\n               </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"recipient-name\" class=\"col-form-label\">Vehicle Number</label>\r\n                <input type=\"text\" class=\"form-control\"  value=\"{{vehicleNumber}}\" name=\"updateVehicleNumber\" [(ngModel)]=\"updateVehicleNumber\"  formControlName=\"updateVehicleNumber\" >\r\n              </div>\r\n              <div class=\"form-group\" >\r\n                <label for=\"name\" class=\"col-form-label\"> Comment </label>\r\n                <textarea type=\"text\" class=\"form-control\"  row =\"3\" value=\"{{comment}}\" name=\"updateComment\" [(ngModel)]=\"updateComment\"  formControlName=\"updateComment\" ></textarea>          \r\n              </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" #closebutton  data-dismiss=\"modal\" >Close</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}